package postgresConnect.generated;

import java.io.Serializable;
import java.util.Objects;

/**
 * Advanced POJO class for table: role_scope_groups_mapping
 * Generated by AdvancedPojoBatchGenerator
 * Includes: Primary Keys, Foreign Keys, Indexes, Check Constraints, Unique Constraints, Default Values
 * 
 * Table Information:
 * - Table Name: role_scope_groups_mapping
 * - Primary Keys: roles_id, scope_groups_id
 * 
 * Check Constraints:
 * - 2200_221799_1_not_null: roles_id IS NOT NULL
 * - 2200_221799_3_not_null: created_at IS NOT NULL
 * - 2200_221799_2_not_null: scope_groups_id IS NOT NULL
 * 
 * Foreign Keys:
 * - roles_id → roles.id
 * - scope_groups_id → scope_groups.id
 * - created_by → users.id
 */
public class RoleScopeGroupsMapping implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: roles_id
     * Type: int8(19) NOT NULL
     * Primary Key
     * Foreign Key → roles.id
     */
    private Long rolesId;

    /**
     * Database column: scope_groups_id
     * Type: int8(19) NOT NULL
     * Primary Key
     * Foreign Key → scope_groups.id
     */
    private Long scopeGroupsId;

    /**
     * Database column: created_at
     * Type: int8(19) NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: created_by
     * Type: int8(19)
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Default constructor
     */
    public RoleScopeGroupsMapping() {
        // Initialize with default values where applicable
    }

    /**
     * Constructor with parameters
     * @param rolesId roles_id
     * @param scopeGroupsId scope_groups_id
     * @param createdAt created_at
     * @param createdBy created_by
     */
    public RoleScopeGroupsMapping(Long rolesId, Long scopeGroupsId, Long createdAt, Long createdBy) {
        this.rolesId = rolesId;
        this.scopeGroupsId = scopeGroupsId;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
    }

    /**
     * Gets the value of roles_id
     * @return Long value of roles_id
     */
    public Long getRolesId() {
        return this.rolesId;
    }

    /**
     * Sets the value of roles_id
     * @param rolesId new value for roles_id
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setRolesId(Long rolesId) {
        if (rolesId == null) {
            throw new IllegalArgumentException("roles_id cannot be null (NOT NULL constraint)");
        }
        this.rolesId = rolesId;
    }

    /**
     * Gets the value of scope_groups_id
     * @return Long value of scope_groups_id
     */
    public Long getScopeGroupsId() {
        return this.scopeGroupsId;
    }

    /**
     * Sets the value of scope_groups_id
     * @param scopeGroupsId new value for scope_groups_id
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setScopeGroupsId(Long scopeGroupsId) {
        if (scopeGroupsId == null) {
            throw new IllegalArgumentException("scope_groups_id cannot be null (NOT NULL constraint)");
        }
        this.scopeGroupsId = scopeGroupsId;
    }

    /**
     * Gets the value of created_at
     * @return Long value of created_at
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets the value of created_at
     * @param createdAt new value for created_at
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null (NOT NULL constraint)");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets the value of created_by
     * @return Long value of created_by
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets the value of created_by
     * @param createdBy new value for created_by
     */
    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Validates all constraints for this object
     * @return List of constraint violations (empty if valid)
     */
    public java.util.List<String> validateConstraints() {
        java.util.List<String> violations = new java.util.ArrayList<>();
        if (this.rolesId == null) {
            violations.add("roles_id cannot be null");
        }
        if (this.scopeGroupsId == null) {
            violations.add("scope_groups_id cannot be null");
        }
        if (this.createdAt == null) {
            violations.add("created_at cannot be null");
        }
        return violations;
    }

    /**
     * Compares this object with another for equality
     * @param obj the object to compare with
     * @return true if objects are equal, false otherwise
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        RoleScopeGroupsMapping other = (RoleScopeGroupsMapping) obj;
        return Objects.equals(this.rolesId, other.rolesId) && Objects.equals(this.scopeGroupsId, other.scopeGroupsId);
    }

    /**
     * Generates hash code for this object
     * @return hash code
     */
    @Override
    public int hashCode() {
        return Objects.hash(this.rolesId, this.scopeGroupsId);
    }

    /**
     * Returns string representation of this object
     * @return string representation
     */
    @Override
    public String toString() {
        return "RoleScopeGroupsMapping{" +
                "rolesId=" + rolesId +
                ", scopeGroupsId=" + scopeGroupsId +
                ", createdAt=" + createdAt +
                ", createdBy=" + createdBy +
                '}';
    }
}
