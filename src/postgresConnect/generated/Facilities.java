package postgresConnect.generated;

import java.io.Serializable;
import java.util.Objects;

/**
 * Advanced POJO class for table: facilities
 * Generated by AdvancedPojoBatchGenerator
 * Includes: Primary Keys, Foreign Keys, Indexes, Check Constraints, Unique Constraints, Default Values
 * 
 * Table Information:
 * - Table Name: facilities
 * - Primary Keys: id
 * 
 * Check Constraints:
 * - 2200_221559_9_not_null: date_format IS NOT NULL
 * - 2200_221559_4_not_null: created_at IS NOT NULL
 * - 2200_221559_12_not_null: time_format IS NOT NULL
 * - 2200_221559_10_not_null: date_time_format IS NOT NULL
 * - 2200_221559_5_not_null: modified_at IS NOT NULL
 * - 2200_221559_7_not_null: time_zone IS NOT NULL
 * - 2200_221559_3_not_null: organisations_id IS NOT NULL
 * - 2200_221559_1_not_null: id IS NOT NULL
 * 
 * Foreign Keys:
 * - organisations_id → organisations.id
 * - created_by → users.id
 * - modified_by → users.id
 */
public class Facilities implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: id
     * Type: int8(19) NOT NULL
     * Primary Key
     */
    private Long id;

    /**
     * Database column: name
     * Type: varchar(255)
     */
    private String name;

    /**
     * Database column: organisations_id
     * Type: int8(19) NOT NULL
     * Foreign Key → organisations.id
     */
    private Long organisationsId;

    /**
     * Database column: created_at
     * Type: int8(19) NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: modified_at
     * Type: int8(19) NOT NULL
     */
    private Long modifiedAt;

    /**
     * Database column: archived
     * Type: bool(1)
     * Default: false
     */
    private Boolean archived;

    /**
     * Database column: time_zone
     * Type: varchar(30) NOT NULL
     * Default: 'Asia/Kolkata'::character varying
     */
    private String timeZone;

    /**
     * Database column: created_by
     * Type: int8(19)
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Database column: date_format
     * Type: varchar(50) NOT NULL
     * Default: 'MMM dd, yyyy'::character varying
     */
    private String dateFormat;

    /**
     * Database column: date_time_format
     * Type: varchar(50) NOT NULL
     * Default: 'MMM dd, yyyy HH:mm'::character varying
     */
    private String dateTimeFormat;

    /**
     * Database column: modified_by
     * Type: int8(19)
     * Foreign Key → users.id
     */
    private Long modifiedBy;

    /**
     * Database column: time_format
     * Type: varchar(50) NOT NULL
     * Default: 'HH:mm'::character varying
     */
    private String timeFormat;

    /**
     * Database column: logo_url
     * Type: varchar(255)
     */
    private String logoUrl;

    /**
     * Default constructor
     */
    public Facilities() {
        // Initialize with default values where applicable
        this.archived = false; // Default value
    }

    /**
     * Constructor with parameters
     * @param id id
     * @param name name
     * @param organisationsId organisations_id
     * @param createdAt created_at
     * @param modifiedAt modified_at
     * @param archived archived
     * @param timeZone time_zone
     * @param createdBy created_by
     * @param dateFormat date_format
     * @param dateTimeFormat date_time_format
     * @param modifiedBy modified_by
     * @param timeFormat time_format
     * @param logoUrl logo_url
     */
    public Facilities(Long id, String name, Long organisationsId, Long createdAt, Long modifiedAt, Boolean archived, String timeZone, Long createdBy, String dateFormat, String dateTimeFormat, Long modifiedBy, String timeFormat, String logoUrl) {
        this.id = id;
        this.name = name;
        this.organisationsId = organisationsId;
        this.createdAt = createdAt;
        this.modifiedAt = modifiedAt;
        this.archived = archived;
        this.timeZone = timeZone;
        this.createdBy = createdBy;
        this.dateFormat = dateFormat;
        this.dateTimeFormat = dateTimeFormat;
        this.modifiedBy = modifiedBy;
        this.timeFormat = timeFormat;
        this.logoUrl = logoUrl;
    }

    /**
     * Gets the value of id
     * @return Long value of id
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Sets the value of id
     * @param id new value for id
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setId(Long id) {
        if (id == null) {
            throw new IllegalArgumentException("id cannot be null (NOT NULL constraint)");
        }
        this.id = id;
    }

    /**
     * Gets the value of name
     * @return String value of name
     */
    public String getName() {
        return this.name;
    }

    /**
     * Sets the value of name
     * @param name new value for name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Gets the value of organisations_id
     * @return Long value of organisations_id
     */
    public Long getOrganisationsId() {
        return this.organisationsId;
    }

    /**
     * Sets the value of organisations_id
     * @param organisationsId new value for organisations_id
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setOrganisationsId(Long organisationsId) {
        if (organisationsId == null) {
            throw new IllegalArgumentException("organisations_id cannot be null (NOT NULL constraint)");
        }
        this.organisationsId = organisationsId;
    }

    /**
     * Gets the value of created_at
     * @return Long value of created_at
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets the value of created_at
     * @param createdAt new value for created_at
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null (NOT NULL constraint)");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets the value of modified_at
     * @return Long value of modified_at
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets the value of modified_at
     * @param modifiedAt new value for modified_at
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setModifiedAt(Long modifiedAt) {
        if (modifiedAt == null) {
            throw new IllegalArgumentException("modified_at cannot be null (NOT NULL constraint)");
        }
        this.modifiedAt = modifiedAt;
    }

    /**
     * Gets the value of archived
     * @return Boolean value of archived
     */
    public Boolean getArchived() {
        return this.archived;
    }

    /**
     * Sets the value of archived
     * @param archived new value for archived
     */
    public void setArchived(Boolean archived) {
        this.archived = archived;
    }

    /**
     * Gets the value of time_zone
     * @return String value of time_zone
     */
    public String getTimeZone() {
        return this.timeZone;
    }

    /**
     * Sets the value of time_zone
     * @param timeZone new value for time_zone
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setTimeZone(String timeZone) {
        if (timeZone == null) {
            throw new IllegalArgumentException("time_zone cannot be null (NOT NULL constraint)");
        }
        this.timeZone = timeZone;
    }

    /**
     * Gets the value of created_by
     * @return Long value of created_by
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets the value of created_by
     * @param createdBy new value for created_by
     */
    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Gets the value of date_format
     * @return String value of date_format
     */
    public String getDateFormat() {
        return this.dateFormat;
    }

    /**
     * Sets the value of date_format
     * @param dateFormat new value for date_format
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setDateFormat(String dateFormat) {
        if (dateFormat == null) {
            throw new IllegalArgumentException("date_format cannot be null (NOT NULL constraint)");
        }
        this.dateFormat = dateFormat;
    }

    /**
     * Gets the value of date_time_format
     * @return String value of date_time_format
     */
    public String getDateTimeFormat() {
        return this.dateTimeFormat;
    }

    /**
     * Sets the value of date_time_format
     * @param dateTimeFormat new value for date_time_format
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setDateTimeFormat(String dateTimeFormat) {
        if (dateTimeFormat == null) {
            throw new IllegalArgumentException("date_time_format cannot be null (NOT NULL constraint)");
        }
        this.dateTimeFormat = dateTimeFormat;
    }

    /**
     * Gets the value of modified_by
     * @return Long value of modified_by
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets the value of modified_by
     * @param modifiedBy new value for modified_by
     */
    public void setModifiedBy(Long modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    /**
     * Gets the value of time_format
     * @return String value of time_format
     */
    public String getTimeFormat() {
        return this.timeFormat;
    }

    /**
     * Sets the value of time_format
     * @param timeFormat new value for time_format
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setTimeFormat(String timeFormat) {
        if (timeFormat == null) {
            throw new IllegalArgumentException("time_format cannot be null (NOT NULL constraint)");
        }
        this.timeFormat = timeFormat;
    }

    /**
     * Gets the value of logo_url
     * @return String value of logo_url
     */
    public String getLogoUrl() {
        return this.logoUrl;
    }

    /**
     * Sets the value of logo_url
     * @param logoUrl new value for logo_url
     */
    public void setLogoUrl(String logoUrl) {
        this.logoUrl = logoUrl;
    }

    /**
     * Validates all constraints for this object
     * @return List of constraint violations (empty if valid)
     */
    public java.util.List<String> validateConstraints() {
        java.util.List<String> violations = new java.util.ArrayList<>();
        if (this.id == null) {
            violations.add("id cannot be null");
        }
        if (this.organisationsId == null) {
            violations.add("organisations_id cannot be null");
        }
        if (this.createdAt == null) {
            violations.add("created_at cannot be null");
        }
        if (this.modifiedAt == null) {
            violations.add("modified_at cannot be null");
        }
        if (this.timeZone == null) {
            violations.add("time_zone cannot be null");
        }
        if (this.dateFormat == null) {
            violations.add("date_format cannot be null");
        }
        if (this.dateTimeFormat == null) {
            violations.add("date_time_format cannot be null");
        }
        if (this.timeFormat == null) {
            violations.add("time_format cannot be null");
        }
        return violations;
    }

    /**
     * Compares this object with another for equality
     * @param obj the object to compare with
     * @return true if objects are equal, false otherwise
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Facilities other = (Facilities) obj;
        return Objects.equals(this.id, other.id);
    }

    /**
     * Generates hash code for this object
     * @return hash code
     */
    @Override
    public int hashCode() {
        return Objects.hash(this.id);
    }

    /**
     * Returns string representation of this object
     * @return string representation
     */
    @Override
    public String toString() {
        return "Facilities{" +
                "id=" + id +
                ", name=" + name +
                ", organisationsId=" + organisationsId +
                ", createdAt=" + createdAt +
                ", modifiedAt=" + modifiedAt +
                ", archived=" + archived +
                ", timeZone=" + timeZone +
                ", createdBy=" + createdBy +
                ", dateFormat=" + dateFormat +
                ", dateTimeFormat=" + dateTimeFormat +
                ", modifiedBy=" + modifiedBy +
                ", timeFormat=" + timeFormat +
                ", logoUrl=" + logoUrl +
                '}';
    }
}
