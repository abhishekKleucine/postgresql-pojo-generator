package postgresConnect.generated;

import java.io.Serializable;
import java.util.Objects;

/**
 * Advanced POJO class for table: versions
 * Generated by AdvancedPojoBatchGenerator
 * Includes: Primary Keys, Foreign Keys, Indexes, Check Constraints, Unique Constraints, Default Values
 * 
 * Table Information:
 * - Table Name: versions
 * - Primary Keys: id
 * 
 * Check Constraints:
 * - 2200_222906_1_not_null: id IS NOT NULL
 * 
 * Foreign Keys:
 * - created_by → users.id
 * - modified_by → users.id
 */
public class Versions implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: id
     * Type: int8(19) NOT NULL
     * Primary Key
     */
    private Long id;

    /**
     * Database column: created_at
     * Type: int8(19)
     */
    private Long createdAt;

    /**
     * Database column: modified_at
     * Type: int8(19)
     */
    private Long modifiedAt;

    /**
     * Database column: deprecated_at
     * Type: int8(19)
     */
    private Long deprecatedAt;

    /**
     * Database column: parent
     * Type: int8(19)
     */
    private Long parent;

    /**
     * Database column: self
     * Type: int8(19)
     */
    private Long self;

    /**
     * Database column: type
     * Type: varchar(50)
     */
    private String type;

    /**
     * Database column: version
     * Type: int4(10)
     */
    private Integer version;

    /**
     * Database column: versioned_at
     * Type: int8(19)
     */
    private Long versionedAt;

    /**
     * Database column: created_by
     * Type: int8(19)
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Database column: modified_by
     * Type: int8(19)
     * Foreign Key → users.id
     */
    private Long modifiedBy;

    /**
     * Database column: ancestor
     * Type: int8(19)
     */
    private Long ancestor;

    /**
     * Default constructor
     */
    public Versions() {
        // Initialize with default values where applicable
    }

    /**
     * Constructor with parameters
     * @param id id
     * @param createdAt created_at
     * @param modifiedAt modified_at
     * @param deprecatedAt deprecated_at
     * @param parent parent
     * @param self self
     * @param type type
     * @param version version
     * @param versionedAt versioned_at
     * @param createdBy created_by
     * @param modifiedBy modified_by
     * @param ancestor ancestor
     */
    public Versions(Long id, Long createdAt, Long modifiedAt, Long deprecatedAt, Long parent, Long self, String type, Integer version, Long versionedAt, Long createdBy, Long modifiedBy, Long ancestor) {
        this.id = id;
        this.createdAt = createdAt;
        this.modifiedAt = modifiedAt;
        this.deprecatedAt = deprecatedAt;
        this.parent = parent;
        this.self = self;
        this.type = type;
        this.version = version;
        this.versionedAt = versionedAt;
        this.createdBy = createdBy;
        this.modifiedBy = modifiedBy;
        this.ancestor = ancestor;
    }

    /**
     * Gets the value of id
     * @return Long value of id
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Sets the value of id
     * @param id new value for id
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setId(Long id) {
        if (id == null) {
            throw new IllegalArgumentException("id cannot be null (NOT NULL constraint)");
        }
        this.id = id;
    }

    /**
     * Gets the value of created_at
     * @return Long value of created_at
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets the value of created_at
     * @param createdAt new value for created_at
     */
    public void setCreatedAt(Long createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Gets the value of modified_at
     * @return Long value of modified_at
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets the value of modified_at
     * @param modifiedAt new value for modified_at
     */
    public void setModifiedAt(Long modifiedAt) {
        this.modifiedAt = modifiedAt;
    }

    /**
     * Gets the value of deprecated_at
     * @return Long value of deprecated_at
     */
    public Long getDeprecatedAt() {
        return this.deprecatedAt;
    }

    /**
     * Sets the value of deprecated_at
     * @param deprecatedAt new value for deprecated_at
     */
    public void setDeprecatedAt(Long deprecatedAt) {
        this.deprecatedAt = deprecatedAt;
    }

    /**
     * Gets the value of parent
     * @return Long value of parent
     */
    public Long getParent() {
        return this.parent;
    }

    /**
     * Sets the value of parent
     * @param parent new value for parent
     */
    public void setParent(Long parent) {
        this.parent = parent;
    }

    /**
     * Gets the value of self
     * @return Long value of self
     */
    public Long getSelf() {
        return this.self;
    }

    /**
     * Sets the value of self
     * @param self new value for self
     */
    public void setSelf(Long self) {
        this.self = self;
    }

    /**
     * Gets the value of type
     * @return String value of type
     */
    public String getType() {
        return this.type;
    }

    /**
     * Sets the value of type
     * @param type new value for type
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Gets the value of version
     * @return Integer value of version
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Sets the value of version
     * @param version new value for version
     */
    public void setVersion(Integer version) {
        this.version = version;
    }

    /**
     * Gets the value of versioned_at
     * @return Long value of versioned_at
     */
    public Long getVersionedAt() {
        return this.versionedAt;
    }

    /**
     * Sets the value of versioned_at
     * @param versionedAt new value for versioned_at
     */
    public void setVersionedAt(Long versionedAt) {
        this.versionedAt = versionedAt;
    }

    /**
     * Gets the value of created_by
     * @return Long value of created_by
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets the value of created_by
     * @param createdBy new value for created_by
     */
    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Gets the value of modified_by
     * @return Long value of modified_by
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets the value of modified_by
     * @param modifiedBy new value for modified_by
     */
    public void setModifiedBy(Long modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    /**
     * Gets the value of ancestor
     * @return Long value of ancestor
     */
    public Long getAncestor() {
        return this.ancestor;
    }

    /**
     * Sets the value of ancestor
     * @param ancestor new value for ancestor
     */
    public void setAncestor(Long ancestor) {
        this.ancestor = ancestor;
    }

    /**
     * Validates all constraints for this object
     * @return List of constraint violations (empty if valid)
     */
    public java.util.List<String> validateConstraints() {
        java.util.List<String> violations = new java.util.ArrayList<>();
        if (this.id == null) {
            violations.add("id cannot be null");
        }
        return violations;
    }

    /**
     * Compares this object with another for equality
     * @param obj the object to compare with
     * @return true if objects are equal, false otherwise
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Versions other = (Versions) obj;
        return Objects.equals(this.id, other.id);
    }

    /**
     * Generates hash code for this object
     * @return hash code
     */
    @Override
    public int hashCode() {
        return Objects.hash(this.id);
    }

    /**
     * Returns string representation of this object
     * @return string representation
     */
    @Override
    public String toString() {
        return "Versions{" +
                "id=" + id +
                ", createdAt=" + createdAt +
                ", modifiedAt=" + modifiedAt +
                ", deprecatedAt=" + deprecatedAt +
                ", parent=" + parent +
                ", self=" + self +
                ", type=" + type +
                ", version=" + version +
                ", versionedAt=" + versionedAt +
                ", createdBy=" + createdBy +
                ", modifiedBy=" + modifiedBy +
                ", ancestor=" + ancestor +
                '}';
    }
}
