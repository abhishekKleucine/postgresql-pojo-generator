package postgresConnect.generated;

import java.io.Serializable;
import java.util.Objects;

/**
 * Advanced POJO class for table: qrtz_scheduler_state
 * Generated by AdvancedPojoBatchGenerator
 * Includes: Primary Keys, Foreign Keys, Indexes, Check Constraints, Unique Constraints, Default Values
 * 
 * Table Information:
 * - Table Name: qrtz_scheduler_state
 * - Primary Keys: sched_name, instance_name
 * 
 * Check Constraints:
 * - 2200_221756_1_not_null: sched_name IS NOT NULL
 * - 2200_221756_3_not_null: last_checkin_time IS NOT NULL
 * - 2200_221756_4_not_null: checkin_interval IS NOT NULL
 * - 2200_221756_2_not_null: instance_name IS NOT NULL
 */
public class QrtzSchedulerState implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: sched_name
     * Type: varchar(120) NOT NULL
     * Primary Key
     */
    private String schedName;

    /**
     * Database column: instance_name
     * Type: varchar(200) NOT NULL
     * Primary Key
     */
    private String instanceName;

    /**
     * Database column: last_checkin_time
     * Type: int8(19) NOT NULL
     */
    private Long lastCheckinTime;

    /**
     * Database column: checkin_interval
     * Type: int8(19) NOT NULL
     */
    private Long checkinInterval;

    /**
     * Default constructor
     */
    public QrtzSchedulerState() {
        // Initialize with default values where applicable
    }

    /**
     * Constructor with parameters
     * @param schedName sched_name
     * @param instanceName instance_name
     * @param lastCheckinTime last_checkin_time
     * @param checkinInterval checkin_interval
     */
    public QrtzSchedulerState(String schedName, String instanceName, Long lastCheckinTime, Long checkinInterval) {
        this.schedName = schedName;
        this.instanceName = instanceName;
        this.lastCheckinTime = lastCheckinTime;
        this.checkinInterval = checkinInterval;
    }

    /**
     * Gets the value of sched_name
     * @return String value of sched_name
     */
    public String getSchedName() {
        return this.schedName;
    }

    /**
     * Sets the value of sched_name
     * @param schedName new value for sched_name
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setSchedName(String schedName) {
        if (schedName == null) {
            throw new IllegalArgumentException("sched_name cannot be null (NOT NULL constraint)");
        }
        this.schedName = schedName;
    }

    /**
     * Gets the value of instance_name
     * @return String value of instance_name
     */
    public String getInstanceName() {
        return this.instanceName;
    }

    /**
     * Sets the value of instance_name
     * @param instanceName new value for instance_name
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setInstanceName(String instanceName) {
        if (instanceName == null) {
            throw new IllegalArgumentException("instance_name cannot be null (NOT NULL constraint)");
        }
        this.instanceName = instanceName;
    }

    /**
     * Gets the value of last_checkin_time
     * @return Long value of last_checkin_time
     */
    public Long getLastCheckinTime() {
        return this.lastCheckinTime;
    }

    /**
     * Sets the value of last_checkin_time
     * @param lastCheckinTime new value for last_checkin_time
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setLastCheckinTime(Long lastCheckinTime) {
        if (lastCheckinTime == null) {
            throw new IllegalArgumentException("last_checkin_time cannot be null (NOT NULL constraint)");
        }
        this.lastCheckinTime = lastCheckinTime;
    }

    /**
     * Gets the value of checkin_interval
     * @return Long value of checkin_interval
     */
    public Long getCheckinInterval() {
        return this.checkinInterval;
    }

    /**
     * Sets the value of checkin_interval
     * @param checkinInterval new value for checkin_interval
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setCheckinInterval(Long checkinInterval) {
        if (checkinInterval == null) {
            throw new IllegalArgumentException("checkin_interval cannot be null (NOT NULL constraint)");
        }
        this.checkinInterval = checkinInterval;
    }

    /**
     * Validates all constraints for this object
     * @return List of constraint violations (empty if valid)
     */
    public java.util.List<String> validateConstraints() {
        java.util.List<String> violations = new java.util.ArrayList<>();
        if (this.schedName == null) {
            violations.add("sched_name cannot be null");
        }
        if (this.instanceName == null) {
            violations.add("instance_name cannot be null");
        }
        if (this.lastCheckinTime == null) {
            violations.add("last_checkin_time cannot be null");
        }
        if (this.checkinInterval == null) {
            violations.add("checkin_interval cannot be null");
        }
        return violations;
    }

    /**
     * Compares this object with another for equality
     * @param obj the object to compare with
     * @return true if objects are equal, false otherwise
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        QrtzSchedulerState other = (QrtzSchedulerState) obj;
        return Objects.equals(this.schedName, other.schedName) && Objects.equals(this.instanceName, other.instanceName);
    }

    /**
     * Generates hash code for this object
     * @return hash code
     */
    @Override
    public int hashCode() {
        return Objects.hash(this.schedName, this.instanceName);
    }

    /**
     * Returns string representation of this object
     * @return string representation
     */
    @Override
    public String toString() {
        return "QrtzSchedulerState{" +
                "schedName=" + schedName +
                ", instanceName=" + instanceName +
                ", lastCheckinTime=" + lastCheckinTime +
                ", checkinInterval=" + checkinInterval +
                '}';
    }
}
