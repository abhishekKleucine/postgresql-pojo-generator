package postgresConnect.generated;

import java.io.Serializable;
import java.util.Objects;

/**
 * Advanced POJO class for table: task_recurrences
 * Generated by AdvancedPojoBatchGenerator
 * Includes: Primary Keys, Foreign Keys, Indexes, Check Constraints, Unique Constraints, Default Values
 * 
 * Table Information:
 * - Table Name: task_recurrences
 * - Primary Keys: id
 * 
 * Indexes:
 * - pk_task_recurrences (UNIQUE): id
 * 
 * Check Constraints:
 * - 2200_221864_9_not_null: modified_by IS NOT NULL
 * - 2200_221864_7_not_null: modified_at IS NOT NULL
 * - 2200_221864_1_not_null: id IS NOT NULL
 * - 2200_221864_8_not_null: created_by IS NOT NULL
 * - 2200_221864_6_not_null: created_at IS NOT NULL
 */
public class TaskRecurrences implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: id
     * Type: int8(19) NOT NULL
     * Primary Key
     */
    private Long id;

    /**
     * Database column: start_date_interval
     * Type: int4(10)
     */
    private Integer startDateInterval;

    /**
     * Database column: start_date_duration
     * Type: jsonb(2147483647)
     * Default: '{}'::jsonb
     */
    private String startDateDuration;

    /**
     * Database column: due_date_interval
     * Type: int4(10)
     */
    private Integer dueDateInterval;

    /**
     * Database column: due_date_duration
     * Type: jsonb(2147483647)
     * Default: '{}'::jsonb
     */
    private String dueDateDuration;

    /**
     * Database column: created_at
     * Type: int8(19) NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: modified_at
     * Type: int8(19) NOT NULL
     */
    private Long modifiedAt;

    /**
     * Database column: created_by
     * Type: int8(19) NOT NULL
     */
    private Long createdBy;

    /**
     * Database column: modified_by
     * Type: int8(19) NOT NULL
     */
    private Long modifiedBy;

    /**
     * Database column: positive_start_date_tolerance_interval
     * Type: int4(10)
     * Default: 0
     */
    private Integer positiveStartDateToleranceInterval;

    /**
     * Database column: positive_start_date_tolerance_duration
     * Type: jsonb(2147483647)
     * Default: '{}'::jsonb
     */
    private String positiveStartDateToleranceDuration;

    /**
     * Database column: negative_start_date_tolerance_interval
     * Type: int4(10)
     * Default: 0
     */
    private Integer negativeStartDateToleranceInterval;

    /**
     * Database column: negative_start_date_tolerance_duration
     * Type: jsonb(2147483647)
     * Default: '{}'::jsonb
     */
    private String negativeStartDateToleranceDuration;

    /**
     * Database column: positive_due_date_tolerance_interval
     * Type: int4(10)
     * Default: 0
     */
    private Integer positiveDueDateToleranceInterval;

    /**
     * Database column: positive_due_date_tolerance_duration
     * Type: jsonb(2147483647)
     * Default: '{}'::jsonb
     */
    private String positiveDueDateToleranceDuration;

    /**
     * Database column: negative_due_date_tolerance_interval
     * Type: int4(10)
     * Default: 0
     */
    private Integer negativeDueDateToleranceInterval;

    /**
     * Database column: negative_due_date_tolerance_duration
     * Type: jsonb(2147483647)
     * Default: '{}'::jsonb
     */
    private String negativeDueDateToleranceDuration;

    /**
     * Default constructor
     */
    public TaskRecurrences() {
        // Initialize with default values where applicable
        this.positiveStartDateToleranceInterval = 0; // Default value
        this.negativeStartDateToleranceInterval = 0; // Default value
        this.positiveDueDateToleranceInterval = 0; // Default value
        this.negativeDueDateToleranceInterval = 0; // Default value
    }

    /**
     * Constructor with parameters
     * @param id id
     * @param startDateInterval start_date_interval
     * @param startDateDuration start_date_duration
     * @param dueDateInterval due_date_interval
     * @param dueDateDuration due_date_duration
     * @param createdAt created_at
     * @param modifiedAt modified_at
     * @param createdBy created_by
     * @param modifiedBy modified_by
     * @param positiveStartDateToleranceInterval positive_start_date_tolerance_interval
     * @param positiveStartDateToleranceDuration positive_start_date_tolerance_duration
     * @param negativeStartDateToleranceInterval negative_start_date_tolerance_interval
     * @param negativeStartDateToleranceDuration negative_start_date_tolerance_duration
     * @param positiveDueDateToleranceInterval positive_due_date_tolerance_interval
     * @param positiveDueDateToleranceDuration positive_due_date_tolerance_duration
     * @param negativeDueDateToleranceInterval negative_due_date_tolerance_interval
     * @param negativeDueDateToleranceDuration negative_due_date_tolerance_duration
     */
    public TaskRecurrences(Long id, Integer startDateInterval, String startDateDuration, Integer dueDateInterval, String dueDateDuration, Long createdAt, Long modifiedAt, Long createdBy, Long modifiedBy, Integer positiveStartDateToleranceInterval, String positiveStartDateToleranceDuration, Integer negativeStartDateToleranceInterval, String negativeStartDateToleranceDuration, Integer positiveDueDateToleranceInterval, String positiveDueDateToleranceDuration, Integer negativeDueDateToleranceInterval, String negativeDueDateToleranceDuration) {
        this.id = id;
        this.startDateInterval = startDateInterval;
        this.startDateDuration = startDateDuration;
        this.dueDateInterval = dueDateInterval;
        this.dueDateDuration = dueDateDuration;
        this.createdAt = createdAt;
        this.modifiedAt = modifiedAt;
        this.createdBy = createdBy;
        this.modifiedBy = modifiedBy;
        this.positiveStartDateToleranceInterval = positiveStartDateToleranceInterval;
        this.positiveStartDateToleranceDuration = positiveStartDateToleranceDuration;
        this.negativeStartDateToleranceInterval = negativeStartDateToleranceInterval;
        this.negativeStartDateToleranceDuration = negativeStartDateToleranceDuration;
        this.positiveDueDateToleranceInterval = positiveDueDateToleranceInterval;
        this.positiveDueDateToleranceDuration = positiveDueDateToleranceDuration;
        this.negativeDueDateToleranceInterval = negativeDueDateToleranceInterval;
        this.negativeDueDateToleranceDuration = negativeDueDateToleranceDuration;
    }

    /**
     * Gets the value of id
     * @return Long value of id
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Sets the value of id
     * @param id new value for id
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setId(Long id) {
        if (id == null) {
            throw new IllegalArgumentException("id cannot be null (NOT NULL constraint)");
        }
        this.id = id;
    }

    /**
     * Gets the value of start_date_interval
     * @return Integer value of start_date_interval
     */
    public Integer getStartDateInterval() {
        return this.startDateInterval;
    }

    /**
     * Sets the value of start_date_interval
     * @param startDateInterval new value for start_date_interval
     */
    public void setStartDateInterval(Integer startDateInterval) {
        this.startDateInterval = startDateInterval;
    }

    /**
     * Gets the value of start_date_duration
     * @return String value of start_date_duration
     */
    public String getStartDateDuration() {
        return this.startDateDuration;
    }

    /**
     * Sets the value of start_date_duration
     * @param startDateDuration new value for start_date_duration
     */
    public void setStartDateDuration(String startDateDuration) {
        this.startDateDuration = startDateDuration;
    }

    /**
     * Gets the value of due_date_interval
     * @return Integer value of due_date_interval
     */
    public Integer getDueDateInterval() {
        return this.dueDateInterval;
    }

    /**
     * Sets the value of due_date_interval
     * @param dueDateInterval new value for due_date_interval
     */
    public void setDueDateInterval(Integer dueDateInterval) {
        this.dueDateInterval = dueDateInterval;
    }

    /**
     * Gets the value of due_date_duration
     * @return String value of due_date_duration
     */
    public String getDueDateDuration() {
        return this.dueDateDuration;
    }

    /**
     * Sets the value of due_date_duration
     * @param dueDateDuration new value for due_date_duration
     */
    public void setDueDateDuration(String dueDateDuration) {
        this.dueDateDuration = dueDateDuration;
    }

    /**
     * Gets the value of created_at
     * @return Long value of created_at
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets the value of created_at
     * @param createdAt new value for created_at
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null (NOT NULL constraint)");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets the value of modified_at
     * @return Long value of modified_at
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets the value of modified_at
     * @param modifiedAt new value for modified_at
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setModifiedAt(Long modifiedAt) {
        if (modifiedAt == null) {
            throw new IllegalArgumentException("modified_at cannot be null (NOT NULL constraint)");
        }
        this.modifiedAt = modifiedAt;
    }

    /**
     * Gets the value of created_by
     * @return Long value of created_by
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets the value of created_by
     * @param createdBy new value for created_by
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setCreatedBy(Long createdBy) {
        if (createdBy == null) {
            throw new IllegalArgumentException("created_by cannot be null (NOT NULL constraint)");
        }
        this.createdBy = createdBy;
    }

    /**
     * Gets the value of modified_by
     * @return Long value of modified_by
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets the value of modified_by
     * @param modifiedBy new value for modified_by
     * @throws IllegalArgumentException if value is null (NOT NULL constraint)
     */
    public void setModifiedBy(Long modifiedBy) {
        if (modifiedBy == null) {
            throw new IllegalArgumentException("modified_by cannot be null (NOT NULL constraint)");
        }
        this.modifiedBy = modifiedBy;
    }

    /**
     * Gets the value of positive_start_date_tolerance_interval
     * @return Integer value of positive_start_date_tolerance_interval
     */
    public Integer getPositiveStartDateToleranceInterval() {
        return this.positiveStartDateToleranceInterval;
    }

    /**
     * Sets the value of positive_start_date_tolerance_interval
     * @param positiveStartDateToleranceInterval new value for positive_start_date_tolerance_interval
     */
    public void setPositiveStartDateToleranceInterval(Integer positiveStartDateToleranceInterval) {
        this.positiveStartDateToleranceInterval = positiveStartDateToleranceInterval;
    }

    /**
     * Gets the value of positive_start_date_tolerance_duration
     * @return String value of positive_start_date_tolerance_duration
     */
    public String getPositiveStartDateToleranceDuration() {
        return this.positiveStartDateToleranceDuration;
    }

    /**
     * Sets the value of positive_start_date_tolerance_duration
     * @param positiveStartDateToleranceDuration new value for positive_start_date_tolerance_duration
     */
    public void setPositiveStartDateToleranceDuration(String positiveStartDateToleranceDuration) {
        this.positiveStartDateToleranceDuration = positiveStartDateToleranceDuration;
    }

    /**
     * Gets the value of negative_start_date_tolerance_interval
     * @return Integer value of negative_start_date_tolerance_interval
     */
    public Integer getNegativeStartDateToleranceInterval() {
        return this.negativeStartDateToleranceInterval;
    }

    /**
     * Sets the value of negative_start_date_tolerance_interval
     * @param negativeStartDateToleranceInterval new value for negative_start_date_tolerance_interval
     */
    public void setNegativeStartDateToleranceInterval(Integer negativeStartDateToleranceInterval) {
        this.negativeStartDateToleranceInterval = negativeStartDateToleranceInterval;
    }

    /**
     * Gets the value of negative_start_date_tolerance_duration
     * @return String value of negative_start_date_tolerance_duration
     */
    public String getNegativeStartDateToleranceDuration() {
        return this.negativeStartDateToleranceDuration;
    }

    /**
     * Sets the value of negative_start_date_tolerance_duration
     * @param negativeStartDateToleranceDuration new value for negative_start_date_tolerance_duration
     */
    public void setNegativeStartDateToleranceDuration(String negativeStartDateToleranceDuration) {
        this.negativeStartDateToleranceDuration = negativeStartDateToleranceDuration;
    }

    /**
     * Gets the value of positive_due_date_tolerance_interval
     * @return Integer value of positive_due_date_tolerance_interval
     */
    public Integer getPositiveDueDateToleranceInterval() {
        return this.positiveDueDateToleranceInterval;
    }

    /**
     * Sets the value of positive_due_date_tolerance_interval
     * @param positiveDueDateToleranceInterval new value for positive_due_date_tolerance_interval
     */
    public void setPositiveDueDateToleranceInterval(Integer positiveDueDateToleranceInterval) {
        this.positiveDueDateToleranceInterval = positiveDueDateToleranceInterval;
    }

    /**
     * Gets the value of positive_due_date_tolerance_duration
     * @return String value of positive_due_date_tolerance_duration
     */
    public String getPositiveDueDateToleranceDuration() {
        return this.positiveDueDateToleranceDuration;
    }

    /**
     * Sets the value of positive_due_date_tolerance_duration
     * @param positiveDueDateToleranceDuration new value for positive_due_date_tolerance_duration
     */
    public void setPositiveDueDateToleranceDuration(String positiveDueDateToleranceDuration) {
        this.positiveDueDateToleranceDuration = positiveDueDateToleranceDuration;
    }

    /**
     * Gets the value of negative_due_date_tolerance_interval
     * @return Integer value of negative_due_date_tolerance_interval
     */
    public Integer getNegativeDueDateToleranceInterval() {
        return this.negativeDueDateToleranceInterval;
    }

    /**
     * Sets the value of negative_due_date_tolerance_interval
     * @param negativeDueDateToleranceInterval new value for negative_due_date_tolerance_interval
     */
    public void setNegativeDueDateToleranceInterval(Integer negativeDueDateToleranceInterval) {
        this.negativeDueDateToleranceInterval = negativeDueDateToleranceInterval;
    }

    /**
     * Gets the value of negative_due_date_tolerance_duration
     * @return String value of negative_due_date_tolerance_duration
     */
    public String getNegativeDueDateToleranceDuration() {
        return this.negativeDueDateToleranceDuration;
    }

    /**
     * Sets the value of negative_due_date_tolerance_duration
     * @param negativeDueDateToleranceDuration new value for negative_due_date_tolerance_duration
     */
    public void setNegativeDueDateToleranceDuration(String negativeDueDateToleranceDuration) {
        this.negativeDueDateToleranceDuration = negativeDueDateToleranceDuration;
    }

    /**
     * Validates all constraints for this object
     * @return List of constraint violations (empty if valid)
     */
    public java.util.List<String> validateConstraints() {
        java.util.List<String> violations = new java.util.ArrayList<>();
        if (this.id == null) {
            violations.add("id cannot be null");
        }
        if (this.createdAt == null) {
            violations.add("created_at cannot be null");
        }
        if (this.modifiedAt == null) {
            violations.add("modified_at cannot be null");
        }
        if (this.createdBy == null) {
            violations.add("created_by cannot be null");
        }
        if (this.modifiedBy == null) {
            violations.add("modified_by cannot be null");
        }
        return violations;
    }

    /**
     * Compares this object with another for equality
     * @param obj the object to compare with
     * @return true if objects are equal, false otherwise
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        TaskRecurrences other = (TaskRecurrences) obj;
        return Objects.equals(this.id, other.id);
    }

    /**
     * Generates hash code for this object
     * @return hash code
     */
    @Override
    public int hashCode() {
        return Objects.hash(this.id);
    }

    /**
     * Returns string representation of this object
     * @return string representation
     */
    @Override
    public String toString() {
        return "TaskRecurrences{" +
                "id=" + id +
                ", startDateInterval=" + startDateInterval +
                ", startDateDuration=" + startDateDuration +
                ", dueDateInterval=" + dueDateInterval +
                ", dueDateDuration=" + dueDateDuration +
                ", createdAt=" + createdAt +
                ", modifiedAt=" + modifiedAt +
                ", createdBy=" + createdBy +
                ", modifiedBy=" + modifiedBy +
                ", positiveStartDateToleranceInterval=" + positiveStartDateToleranceInterval +
                ", positiveStartDateToleranceDuration=" + positiveStartDateToleranceDuration +
                ", negativeStartDateToleranceInterval=" + negativeStartDateToleranceInterval +
                ", negativeStartDateToleranceDuration=" + negativeStartDateToleranceDuration +
                ", positiveDueDateToleranceInterval=" + positiveDueDateToleranceInterval +
                ", positiveDueDateToleranceDuration=" + positiveDueDateToleranceDuration +
                ", negativeDueDateToleranceInterval=" + negativeDueDateToleranceInterval +
                ", negativeDueDateToleranceDuration=" + negativeDueDateToleranceDuration +
                '}';
    }
}
