package com.example.daoGenerator.dao.sql;

/**
 * Enhanced SQL constants for Licenses entity
 * Key Type: SINGLE_ID
 * Generated by Enhanced JDBC DAO Generator
 */
public final class LicensesSql {

    public static final String FIND_ALL = """
        SELECT payment_done, grace_period, facilities_id, product, workflow, organisations_id, modified_at, type, archived, created_at, subscription_period, created_by, subscription_renewal_date, modified_by, id, subscription_start_date, intimate_before
        FROM licenses
        """;

    public static final String COUNT = """
        SELECT COUNT(*) FROM licenses
        """;

    public static final String FIND_BY_ID = """
        SELECT payment_done, grace_period, facilities_id, product, workflow, organisations_id, modified_at, type, archived, created_at, subscription_period, created_by, subscription_renewal_date, modified_by, id, subscription_start_date, intimate_before
        FROM licenses
        WHERE id = :id
        """;

    public static final String INSERT = """
        INSERT INTO licenses (payment_done, grace_period, facilities_id, product, workflow, organisations_id, modified_at, type, archived, created_at, subscription_period, created_by, subscription_renewal_date, modified_by, subscription_start_date, intimate_before)
        VALUES (:paymentDone, :gracePeriod, :facilitiesId, :product, :workflow, :organisationsId, :modifiedAt, :type, :archived, :createdAt, :subscriptionPeriod, :createdBy, :subscriptionRenewalDate, :modifiedBy, :subscriptionStartDate, :intimateBefore)
        RETURNING id
        """;

    public static final String UPDATE = """
        UPDATE licenses SET
            payment_done = :paymentDone,
            grace_period = :gracePeriod,
            facilities_id = :facilitiesId,
            product = :product,
            workflow = :workflow,
            organisations_id = :organisationsId,
            modified_at = :modifiedAt,
            type = :type,
            archived = :archived,
            created_at = :createdAt,
            subscription_period = :subscriptionPeriod,
            created_by = :createdBy,
            subscription_renewal_date = :subscriptionRenewalDate,
            modified_by = :modifiedBy,
            subscription_start_date = :subscriptionStartDate,
            intimate_before = :intimateBefore
        WHERE id = :id
        """;

    public static final String DELETE_BY_ID = """
        DELETE FROM licenses
        WHERE id = :id
        """;

    public static final String EXISTS_BY_ID = """
        SELECT COUNT(*) FROM licenses
        WHERE id = :id
        """;

    public static final String FIND_BY_MODIFIED_BY = """
        SELECT payment_done, grace_period, facilities_id, product, workflow, organisations_id, modified_at, type, archived, created_at, subscription_period, created_by, subscription_renewal_date, modified_by, id, subscription_start_date, intimate_before
        FROM licenses
        WHERE modified_by = :modifiedBy
        """;

    public static final String FIND_BY_ORGANISATIONS_ID = """
        SELECT payment_done, grace_period, facilities_id, product, workflow, organisations_id, modified_at, type, archived, created_at, subscription_period, created_by, subscription_renewal_date, modified_by, id, subscription_start_date, intimate_before
        FROM licenses
        WHERE organisations_id = :organisationsId
        """;

    public static final String FIND_BY_FACILITIES_ID = """
        SELECT payment_done, grace_period, facilities_id, product, workflow, organisations_id, modified_at, type, archived, created_at, subscription_period, created_by, subscription_renewal_date, modified_by, id, subscription_start_date, intimate_before
        FROM licenses
        WHERE facilities_id = :facilitiesId
        """;

    public static final String FIND_BY_CREATED_BY = """
        SELECT payment_done, grace_period, facilities_id, product, workflow, organisations_id, modified_at, type, archived, created_at, subscription_period, created_by, subscription_renewal_date, modified_by, id, subscription_start_date, intimate_before
        FROM licenses
        WHERE created_by = :createdBy
        """;

    private LicensesSql() {
        // Utility class
    }
}
