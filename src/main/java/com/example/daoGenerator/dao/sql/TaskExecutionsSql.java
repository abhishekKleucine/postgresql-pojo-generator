package com.example.daoGenerator.dao.sql;

/**
 * SQL constants for TaskExecutions entity
 * Generated by JDBC DAO Generator
 */
public final class TaskExecutionsSql {

    public static final String FIND_BY_ID = """
        SELECT correction_enabled, schedule_premature_start_reason, reason, correction_reason, corrected_at, schedule_overdue_completion_reason, recurring_expected_started_at, scheduling_expected_started_at, modified_at, recurring_expected_due_at, started_at, ended_by, is_scheduled, type, duration, created_at, tasks_id, modified_by, id, state, continue_recurrence, recurring_overdue_completion_reason, corrected_by, started_by, order_tree, recurring_premature_start_reason, created_by, ended_at, recurring_overdue_start_reason, jobs_id, scheduling_expected_due_at
        FROM task_executions
        WHERE id = :id
        """;

    public static final String FIND_ALL = """
        SELECT correction_enabled, schedule_premature_start_reason, reason, correction_reason, corrected_at, schedule_overdue_completion_reason, recurring_expected_started_at, scheduling_expected_started_at, modified_at, recurring_expected_due_at, started_at, ended_by, is_scheduled, type, duration, created_at, tasks_id, modified_by, id, state, continue_recurrence, recurring_overdue_completion_reason, corrected_by, started_by, order_tree, recurring_premature_start_reason, created_by, ended_at, recurring_overdue_start_reason, jobs_id, scheduling_expected_due_at
        FROM task_executions
        """;

    public static final String INSERT = """
        INSERT INTO task_executions (correction_enabled, schedule_premature_start_reason, reason, correction_reason, corrected_at, schedule_overdue_completion_reason, recurring_expected_started_at, scheduling_expected_started_at, modified_at, recurring_expected_due_at, started_at, ended_by, is_scheduled, type, duration, created_at, tasks_id, modified_by, state, continue_recurrence, recurring_overdue_completion_reason, corrected_by, started_by, order_tree, recurring_premature_start_reason, created_by, ended_at, recurring_overdue_start_reason, jobs_id, scheduling_expected_due_at)
        VALUES (:correctionEnabled, :schedulePrematureStartReason, :reason, :correctionReason, :correctedAt, :scheduleOverdueCompletionReason, :recurringExpectedStartedAt, :schedulingExpectedStartedAt, :modifiedAt, :recurringExpectedDueAt, :startedAt, :endedBy, :isScheduled, :type, :duration, :createdAt, :tasksId, :modifiedBy, :state, :continueRecurrence, :recurringOverdueCompletionReason, :correctedBy, :startedBy, :orderTree, :recurringPrematureStartReason, :createdBy, :endedAt, :recurringOverdueStartReason, :jobsId, :schedulingExpectedDueAt)
        RETURNING id
        """;

    public static final String UPDATE = """
        UPDATE task_executions SET
            correction_enabled = :correctionEnabled,
            schedule_premature_start_reason = :schedulePrematureStartReason,
            reason = :reason,
            correction_reason = :correctionReason,
            corrected_at = :correctedAt,
            schedule_overdue_completion_reason = :scheduleOverdueCompletionReason,
            recurring_expected_started_at = :recurringExpectedStartedAt,
            scheduling_expected_started_at = :schedulingExpectedStartedAt,
            modified_at = :modifiedAt,
            recurring_expected_due_at = :recurringExpectedDueAt,
            started_at = :startedAt,
            ended_by = :endedBy,
            is_scheduled = :isScheduled,
            type = :type,
            duration = :duration,
            created_at = :createdAt,
            tasks_id = :tasksId,
            modified_by = :modifiedBy,
            state = :state,
            continue_recurrence = :continueRecurrence,
            recurring_overdue_completion_reason = :recurringOverdueCompletionReason,
            corrected_by = :correctedBy,
            started_by = :startedBy,
            order_tree = :orderTree,
            recurring_premature_start_reason = :recurringPrematureStartReason,
            created_by = :createdBy,
            ended_at = :endedAt,
            recurring_overdue_start_reason = :recurringOverdueStartReason,
            jobs_id = :jobsId,
            scheduling_expected_due_at = :schedulingExpectedDueAt
        WHERE id = :id
        """;

    public static final String DELETE_BY_ID = """
        DELETE FROM task_executions
        WHERE id = :id
        """;

    public static final String EXISTS_BY_ID = """
        SELECT COUNT(*) FROM task_executions
        WHERE id = :id
        """;

    public static final String COUNT = """
        SELECT COUNT(*) FROM task_executions
        """;

    public static final String FIND_BY_TASKS_ID = """
        SELECT correction_enabled, schedule_premature_start_reason, reason, correction_reason, corrected_at, schedule_overdue_completion_reason, recurring_expected_started_at, scheduling_expected_started_at, modified_at, recurring_expected_due_at, started_at, ended_by, is_scheduled, type, duration, created_at, tasks_id, modified_by, id, state, continue_recurrence, recurring_overdue_completion_reason, corrected_by, started_by, order_tree, recurring_premature_start_reason, created_by, ended_at, recurring_overdue_start_reason, jobs_id, scheduling_expected_due_at
        FROM task_executions
        WHERE tasks_id = :tasksId
        """;

    public static final String FIND_BY_MODIFIED_BY = """
        SELECT correction_enabled, schedule_premature_start_reason, reason, correction_reason, corrected_at, schedule_overdue_completion_reason, recurring_expected_started_at, scheduling_expected_started_at, modified_at, recurring_expected_due_at, started_at, ended_by, is_scheduled, type, duration, created_at, tasks_id, modified_by, id, state, continue_recurrence, recurring_overdue_completion_reason, corrected_by, started_by, order_tree, recurring_premature_start_reason, created_by, ended_at, recurring_overdue_start_reason, jobs_id, scheduling_expected_due_at
        FROM task_executions
        WHERE modified_by = :modifiedBy
        """;

    public static final String FIND_BY_JOBS_ID = """
        SELECT correction_enabled, schedule_premature_start_reason, reason, correction_reason, corrected_at, schedule_overdue_completion_reason, recurring_expected_started_at, scheduling_expected_started_at, modified_at, recurring_expected_due_at, started_at, ended_by, is_scheduled, type, duration, created_at, tasks_id, modified_by, id, state, continue_recurrence, recurring_overdue_completion_reason, corrected_by, started_by, order_tree, recurring_premature_start_reason, created_by, ended_at, recurring_overdue_start_reason, jobs_id, scheduling_expected_due_at
        FROM task_executions
        WHERE jobs_id = :jobsId
        """;

    public static final String FIND_BY_CREATED_BY = """
        SELECT correction_enabled, schedule_premature_start_reason, reason, correction_reason, corrected_at, schedule_overdue_completion_reason, recurring_expected_started_at, scheduling_expected_started_at, modified_at, recurring_expected_due_at, started_at, ended_by, is_scheduled, type, duration, created_at, tasks_id, modified_by, id, state, continue_recurrence, recurring_overdue_completion_reason, corrected_by, started_by, order_tree, recurring_premature_start_reason, created_by, ended_at, recurring_overdue_start_reason, jobs_id, scheduling_expected_due_at
        FROM task_executions
        WHERE created_by = :createdBy
        """;

    public static final String FIND_BY_STARTED_BY = """
        SELECT correction_enabled, schedule_premature_start_reason, reason, correction_reason, corrected_at, schedule_overdue_completion_reason, recurring_expected_started_at, scheduling_expected_started_at, modified_at, recurring_expected_due_at, started_at, ended_by, is_scheduled, type, duration, created_at, tasks_id, modified_by, id, state, continue_recurrence, recurring_overdue_completion_reason, corrected_by, started_by, order_tree, recurring_premature_start_reason, created_by, ended_at, recurring_overdue_start_reason, jobs_id, scheduling_expected_due_at
        FROM task_executions
        WHERE started_by = :startedBy
        """;

    private TaskExecutionsSql() {
        // Utility class
    }
}
