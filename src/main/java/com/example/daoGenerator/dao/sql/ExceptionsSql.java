package com.example.daoGenerator.dao.sql;

/**
 * SQL constants for Exceptions entity
 * Generated by JDBC DAO Generator
 */
public final class ExceptionsSql {

    public static final String FIND_BY_ID = """
        SELECT reviewers_reason, reason, facilities_id, code, modified_at, initiators_reason, previous_state, parameter_values_id, created_at, created_by, modified_by, id, task_executions_id, choices, rules_id, value, jobs_id, status
        FROM exceptions
        WHERE id = :id
        """;

    public static final String FIND_ALL = """
        SELECT reviewers_reason, reason, facilities_id, code, modified_at, initiators_reason, previous_state, parameter_values_id, created_at, created_by, modified_by, id, task_executions_id, choices, rules_id, value, jobs_id, status
        FROM exceptions
        """;

    public static final String INSERT = """
        INSERT INTO exceptions (reviewers_reason, reason, facilities_id, code, modified_at, initiators_reason, previous_state, parameter_values_id, created_at, created_by, modified_by, task_executions_id, choices, rules_id, value, jobs_id, status)
        VALUES (:reviewersReason, :reason, :facilitiesId, :code, :modifiedAt, :initiatorsReason, :previousState, :parameterValuesId, :createdAt, :createdBy, :modifiedBy, :taskExecutionsId, :choices::jsonb, :rulesId, :value, :jobsId, :status)
        RETURNING id
        """;

    public static final String UPDATE = """
        UPDATE exceptions SET
            reviewers_reason = :reviewersReason,
            reason = :reason,
            facilities_id = :facilitiesId,
            code = :code,
            modified_at = :modifiedAt,
            initiators_reason = :initiatorsReason,
            previous_state = :previousState,
            parameter_values_id = :parameterValuesId,
            created_at = :createdAt,
            created_by = :createdBy,
            modified_by = :modifiedBy,
            task_executions_id = :taskExecutionsId,
            choices = :choices::jsonb,
            rules_id = :rulesId,
            value = :value,
            jobs_id = :jobsId,
            status = :status
        WHERE id = :id
        """;

    public static final String DELETE_BY_ID = """
        DELETE FROM exceptions
        WHERE id = :id
        """;

    public static final String EXISTS_BY_ID = """
        SELECT COUNT(*) FROM exceptions
        WHERE id = :id
        """;

    public static final String COUNT = """
        SELECT COUNT(*) FROM exceptions
        """;

    public static final String FIND_BY_TASK_EXECUTIONS_ID = """
        SELECT reviewers_reason, reason, facilities_id, code, modified_at, initiators_reason, previous_state, parameter_values_id, created_at, created_by, modified_by, id, task_executions_id, choices, rules_id, value, jobs_id, status
        FROM exceptions
        WHERE task_executions_id = :taskExecutionsId
        """;

    public static final String FIND_BY_PARAMETER_VALUES_ID = """
        SELECT reviewers_reason, reason, facilities_id, code, modified_at, initiators_reason, previous_state, parameter_values_id, created_at, created_by, modified_by, id, task_executions_id, choices, rules_id, value, jobs_id, status
        FROM exceptions
        WHERE parameter_values_id = :parameterValuesId
        """;

    public static final String FIND_BY_FACILITIES_ID = """
        SELECT reviewers_reason, reason, facilities_id, code, modified_at, initiators_reason, previous_state, parameter_values_id, created_at, created_by, modified_by, id, task_executions_id, choices, rules_id, value, jobs_id, status
        FROM exceptions
        WHERE facilities_id = :facilitiesId
        """;

    public static final String FIND_BY_JOBS_ID = """
        SELECT reviewers_reason, reason, facilities_id, code, modified_at, initiators_reason, previous_state, parameter_values_id, created_at, created_by, modified_by, id, task_executions_id, choices, rules_id, value, jobs_id, status
        FROM exceptions
        WHERE jobs_id = :jobsId
        """;

    private ExceptionsSql() {
        // Utility class
    }
}
