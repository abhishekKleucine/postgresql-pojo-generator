package com.example.daoGenerator.dao.sql;

/**
 * Enhanced SQL constants for Corrections entity
 * Key Type: SINGLE_ID
 * Generated by Enhanced JDBC DAO Generator
 */
public final class CorrectionsSql {

    public static final String FIND_ALL = """
        SELECT reviewers_reason, new_value, facilities_id, code, modified_at, correctors_reason, initiators_reason, previous_state, parameter_values_id, created_at, new_choices, created_by, old_choices, modified_by, id, old_value, task_executions_id, jobs_id, status
        FROM corrections
        """;

    public static final String COUNT = """
        SELECT COUNT(*) FROM corrections
        """;

    public static final String FIND_BY_ID = """
        SELECT reviewers_reason, new_value, facilities_id, code, modified_at, correctors_reason, initiators_reason, previous_state, parameter_values_id, created_at, new_choices, created_by, old_choices, modified_by, id, old_value, task_executions_id, jobs_id, status
        FROM corrections
        WHERE id = :id
        """;

    public static final String INSERT = """
        INSERT INTO corrections (reviewers_reason, new_value, facilities_id, code, modified_at, correctors_reason, initiators_reason, previous_state, parameter_values_id, created_at, new_choices, created_by, old_choices, modified_by, old_value, task_executions_id, jobs_id, status)
        VALUES (:reviewersReason, :newValue, :facilitiesId, :code, :modifiedAt, :correctorsReason, :initiatorsReason, :previousState, :parameterValuesId, :createdAt, :newChoices::jsonb, :createdBy, :oldChoices::jsonb, :modifiedBy, :oldValue, :taskExecutionsId, :jobsId, :status)
        RETURNING id
        """;

    public static final String UPDATE = """
        UPDATE corrections SET
            reviewers_reason = :reviewersReason,
            new_value = :newValue,
            facilities_id = :facilitiesId,
            code = :code,
            modified_at = :modifiedAt,
            correctors_reason = :correctorsReason,
            initiators_reason = :initiatorsReason,
            previous_state = :previousState,
            parameter_values_id = :parameterValuesId,
            created_at = :createdAt,
            new_choices = :newChoices::jsonb,
            created_by = :createdBy,
            old_choices = :oldChoices::jsonb,
            modified_by = :modifiedBy,
            old_value = :oldValue,
            task_executions_id = :taskExecutionsId,
            jobs_id = :jobsId,
            status = :status
        WHERE id = :id
        """;

    public static final String DELETE_BY_ID = """
        DELETE FROM corrections
        WHERE id = :id
        """;

    public static final String EXISTS_BY_ID = """
        SELECT COUNT(*) FROM corrections
        WHERE id = :id
        """;

    public static final String FIND_BY_TASK_EXECUTIONS_ID = """
        SELECT reviewers_reason, new_value, facilities_id, code, modified_at, correctors_reason, initiators_reason, previous_state, parameter_values_id, created_at, new_choices, created_by, old_choices, modified_by, id, old_value, task_executions_id, jobs_id, status
        FROM corrections
        WHERE task_executions_id = :taskExecutionsId
        """;

    public static final String FIND_BY_PARAMETER_VALUES_ID = """
        SELECT reviewers_reason, new_value, facilities_id, code, modified_at, correctors_reason, initiators_reason, previous_state, parameter_values_id, created_at, new_choices, created_by, old_choices, modified_by, id, old_value, task_executions_id, jobs_id, status
        FROM corrections
        WHERE parameter_values_id = :parameterValuesId
        """;

    public static final String FIND_BY_FACILITIES_ID = """
        SELECT reviewers_reason, new_value, facilities_id, code, modified_at, correctors_reason, initiators_reason, previous_state, parameter_values_id, created_at, new_choices, created_by, old_choices, modified_by, id, old_value, task_executions_id, jobs_id, status
        FROM corrections
        WHERE facilities_id = :facilitiesId
        """;

    public static final String FIND_BY_JOBS_ID = """
        SELECT reviewers_reason, new_value, facilities_id, code, modified_at, correctors_reason, initiators_reason, previous_state, parameter_values_id, created_at, new_choices, created_by, old_choices, modified_by, id, old_value, task_executions_id, jobs_id, status
        FROM corrections
        WHERE jobs_id = :jobsId
        """;

    private CorrectionsSql() {
        // Utility class
    }
}
