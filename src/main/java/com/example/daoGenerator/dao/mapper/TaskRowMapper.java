package com.example.daoGenerator.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import org.springframework.jdbc.core.RowMapper;
import com.example.pojogenerator.pojos.Task;

/**
 * Enhanced row mapper for Task entity
 * Generated by Enhanced JDBC DAO Generator
 */
public class TaskRowMapper implements RowMapper<Task> {

    @Override
    public Task mapRow(ResultSet rs, int rowNum) throws SQLException {
        Task entity = new Task();

        entity.setOrderTree(rs.getInt("order_tree"));
        entity.setModifiedAt(rs.getLong("modified_at"));
        entity.setMinPeriod(rs.getLong("min_period"));
        entity.setTaskRecurrencesId(rs.getLong("task_recurrences_id"));
        entity.setEnableScheduling(rs.getBoolean("enable_scheduling"));
        entity.setHasExecutorLock(rs.getBoolean("has_executor_lock"));
        entity.setStagesId(rs.getLong("stages_id"));
        entity.setTaskSchedulesId(rs.getLong("task_schedules_id"));
        entity.setMaxPeriod(rs.getLong("max_period"));
        entity.setHasInterlocks(rs.getBoolean("has_interlocks"));
        entity.setIsSoloTask(rs.getBoolean("is_solo_task"));
        entity.setArchived(rs.getBoolean("archived"));
        entity.setIsTimed(rs.getBoolean("is_timed"));
        entity.setCreatedAt(rs.getLong("created_at"));
        entity.setHasBulkVerification(rs.getBoolean("has_bulk_verification"));
        entity.setCreatedBy(rs.getLong("created_by"));
        entity.setHasStop(rs.getBoolean("has_stop"));
        entity.setEnableRecurrence(rs.getBoolean("enable_recurrence"));
        entity.setName(rs.getString("name"));
        entity.setTimerOperator(rs.getString("timer_operator"));
        entity.setModifiedBy(rs.getLong("modified_by"));
        entity.setId(rs.getLong("id"));
        entity.setIsMandatory(rs.getBoolean("is_mandatory"));

        return entity;
    }
}
