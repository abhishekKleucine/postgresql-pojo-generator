package com.example.daoGenerator.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import org.springframework.jdbc.core.RowMapper;
import com.example.pojogenerator.pojos.JobAudits;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * Enhanced row mapper for JobAudits entity
 * Generated by Enhanced JDBC DAO Generator
 */
public class JobAuditsRowMapper implements RowMapper<JobAudits> {

    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public JobAudits mapRow(ResultSet rs, int rowNum) throws SQLException {
        JobAudits entity = new JobAudits();

        entity.setOrganisationsId(rs.getLong("organisations_id"));
        entity.setTasksId(rs.getLong("tasks_id"));
        entity.setAction(rs.getString("action"));
        entity.setDetails(rs.getString("details"));
        entity.setId(rs.getLong("id"));
        entity.setStagesId(rs.getLong("stages_id"));
        entity.setTriggeredAt(rs.getLong("triggered_at"));
        entity.setJobsId(rs.getLong("jobs_id"));
        String parametersJson = rs.getString("parameters");
        if (parametersJson != null) {
            entity.setParameters(parseJsonNode(parametersJson));
        }
        entity.setTriggeredBy(rs.getLong("triggered_by"));

        return entity;
    }

    private JsonNode parseJsonNode(String json) {
        if (json == null || json.trim().isEmpty()) {
            return null;
        }
        try {
            return objectMapper.readTree(json);
        } catch (Exception e) {
            throw new RuntimeException("Failed to parse JSON: " + json, e);
        }
    }
}
