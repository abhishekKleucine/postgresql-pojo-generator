package com.example.daoGenerator.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import org.springframework.jdbc.core.RowMapper;
import com.example.pojogenerator.pojos.TaskExecution;

/**
 * Enhanced row mapper for TaskExecution entity
 * Generated by Enhanced JDBC DAO Generator
 */
public class TaskExecutionRowMapper implements RowMapper<TaskExecution> {

    @Override
    public TaskExecution mapRow(ResultSet rs, int rowNum) throws SQLException {
        TaskExecution entity = new TaskExecution();

        entity.setCorrectionEnabled(rs.getBoolean("correction_enabled"));
        entity.setSchedulePrematureStartReason(rs.getString("schedule_premature_start_reason"));
        entity.setReason(rs.getString("reason"));
        entity.setCorrectionReason(rs.getString("correction_reason"));
        entity.setCorrectedAt(rs.getLong("corrected_at"));
        entity.setScheduleOverdueCompletionReason(rs.getString("schedule_overdue_completion_reason"));
        entity.setRecurringExpectedStartedAt(rs.getLong("recurring_expected_started_at"));
        entity.setSchedulingExpectedStartedAt(rs.getLong("scheduling_expected_started_at"));
        entity.setModifiedAt(rs.getLong("modified_at"));
        entity.setRecurringExpectedDueAt(rs.getLong("recurring_expected_due_at"));
        entity.setStartedAt(rs.getLong("started_at"));
        entity.setEndedBy(rs.getLong("ended_by"));
        entity.setIsScheduled(rs.getBoolean("is_scheduled"));
        entity.setType(rs.getString("type"));
        entity.setDuration(rs.getLong("duration"));
        entity.setCreatedAt(rs.getLong("created_at"));
        entity.setTasksId(rs.getLong("tasks_id"));
        entity.setModifiedBy(rs.getLong("modified_by"));
        entity.setId(rs.getLong("id"));
        entity.setState(rs.getString("state"));
        entity.setContinueRecurrence(rs.getBoolean("continue_recurrence"));
        entity.setRecurringOverdueCompletionReason(rs.getString("recurring_overdue_completion_reason"));
        entity.setCorrectedBy(rs.getLong("corrected_by"));
        entity.setStartedBy(rs.getLong("started_by"));
        entity.setOrderTree(rs.getInt("order_tree"));
        entity.setRecurringPrematureStartReason(rs.getString("recurring_premature_start_reason"));
        entity.setCreatedBy(rs.getLong("created_by"));
        entity.setEndedAt(rs.getLong("ended_at"));
        entity.setRecurringOverdueStartReason(rs.getString("recurring_overdue_start_reason"));
        entity.setJobsId(rs.getLong("jobs_id"));
        entity.setSchedulingExpectedDueAt(rs.getLong("scheduling_expected_due_at"));

        return entity;
    }
}
