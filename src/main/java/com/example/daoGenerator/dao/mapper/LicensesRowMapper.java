package com.example.daoGenerator.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import org.springframework.jdbc.core.RowMapper;
import com.example.pojogenerator.pojos.Licenses;

/**
 * Enhanced row mapper for Licenses entity
 * Generated by Enhanced JDBC DAO Generator
 */
public class LicensesRowMapper implements RowMapper<Licenses> {

    @Override
    public Licenses mapRow(ResultSet rs, int rowNum) throws SQLException {
        Licenses entity = new Licenses();

        entity.setPaymentDone(rs.getBoolean("payment_done"));
        entity.setGracePeriod(rs.getInt("grace_period"));
        entity.setFacilitiesId(rs.getLong("facilities_id"));
        entity.setProduct(rs.getString("product"));
        entity.setWorkflow(rs.getString("workflow"));
        entity.setOrganisationsId(rs.getLong("organisations_id"));
        entity.setModifiedAt(rs.getLong("modified_at"));
        entity.setType(rs.getString("type"));
        entity.setArchived(rs.getBoolean("archived"));
        entity.setCreatedAt(rs.getLong("created_at"));
        entity.setSubscriptionPeriod(rs.getInt("subscription_period"));
        entity.setCreatedBy(rs.getLong("created_by"));
        java.sql.Date subscriptionRenewalDateDate = rs.getDate("subscription_renewal_date");
        if (subscriptionRenewalDateDate != null) {
            entity.setSubscriptionRenewalDate(subscriptionRenewalDateDate.toLocalDate());
        }
        entity.setModifiedBy(rs.getLong("modified_by"));
        entity.setId(rs.getLong("id"));
        java.sql.Date subscriptionStartDateDate = rs.getDate("subscription_start_date");
        if (subscriptionStartDateDate != null) {
            entity.setSubscriptionStartDate(subscriptionStartDateDate.toLocalDate());
        }
        entity.setIntimateBefore(rs.getInt("intimate_before"));

        return entity;
    }
}
