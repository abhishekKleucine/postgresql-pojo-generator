package com.example.daoGenerator.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import org.springframework.jdbc.core.RowMapper;
import com.example.pojogenerator.pojos.Variations;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * Row mapper for Variations entity
 * Generated by JDBC DAO Generator
 */
public class VariationsRowMapper implements RowMapper<Variations> {

    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public Variations mapRow(ResultSet rs, int rowNum) throws SQLException {
        Variations entity = new Variations();

        String oldDetailsJson = rs.getString("old_details");
        if (oldDetailsJson != null) {
            entity.setOldDetails(parseJsonNode(oldDetailsJson));
        }
        entity.setModifiedAt(rs.getLong("modified_at"));
        entity.setDescription(rs.getString("description"));
        String newDetailsJson = rs.getString("new_details");
        if (newDetailsJson != null) {
            entity.setNewDetails(parseJsonNode(newDetailsJson));
        }
        entity.setType(rs.getString("type"));
        entity.setVariationNumber(rs.getString("variation_number"));
        entity.setParameterValuesId(rs.getLong("parameter_values_id"));
        entity.setCreatedAt(rs.getLong("created_at"));
        entity.setCreatedBy(rs.getLong("created_by"));
        entity.setConfigId(rs.getString("config_id"));
        entity.setName(rs.getString("name"));
        entity.setModifiedBy(rs.getLong("modified_by"));
        entity.setId(rs.getLong("id"));
        entity.setJobsId(rs.getLong("jobs_id"));

        return entity;
    }

    private JsonNode parseJsonNode(String json) {
        if (json == null || json.trim().isEmpty()) {
            return null;
        }
        try {
            return objectMapper.readTree(json);
        } catch (Exception e) {
            throw new RuntimeException("Failed to parse JSON: " + json, e);
        }
    }
}
