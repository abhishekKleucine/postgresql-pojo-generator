package com.example.daoGenerator.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import org.springframework.jdbc.core.RowMapper;
import com.example.pojogenerator.pojos.TaskSchedules;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * Enhanced row mapper for TaskSchedules entity
 * Generated by Enhanced JDBC DAO Generator
 */
public class TaskSchedulesRowMapper implements RowMapper<TaskSchedules> {

    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public TaskSchedules mapRow(ResultSet rs, int rowNum) throws SQLException {
        TaskSchedules entity = new TaskSchedules();

        entity.setCreatedAt(rs.getLong("created_at"));
        entity.setCondition(rs.getString("condition"));
        entity.setStartDateInterval(rs.getInt("start_date_interval"));
        entity.setCreatedBy(rs.getLong("created_by"));
        entity.setReferencedTasksId(rs.getLong("referenced_tasks_id"));
        entity.setModifiedAt(rs.getLong("modified_at"));
        String dueDateDurationJson = rs.getString("due_date_duration");
        if (dueDateDurationJson != null) {
            entity.setDueDateDuration(parseJsonNode(dueDateDurationJson));
        }
        entity.setDueDateInterval(rs.getInt("due_date_interval"));
        entity.setModifiedBy(rs.getLong("modified_by"));
        entity.setId(rs.getLong("id"));
        entity.setType(rs.getString("type"));
        String startDateDurationJson = rs.getString("start_date_duration");
        if (startDateDurationJson != null) {
            entity.setStartDateDuration(parseJsonNode(startDateDurationJson));
        }

        return entity;
    }

    private JsonNode parseJsonNode(String json) {
        if (json == null || json.trim().isEmpty()) {
            return null;
        }
        try {
            return objectMapper.readTree(json);
        } catch (Exception e) {
            throw new RuntimeException("Failed to parse JSON: " + json, e);
        }
    }
}
