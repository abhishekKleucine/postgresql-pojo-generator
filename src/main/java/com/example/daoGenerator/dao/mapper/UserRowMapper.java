package com.example.daoGenerator.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import org.springframework.jdbc.core.RowMapper;
import com.example.pojogenerator.pojos.User;

/**
 * Enhanced row mapper for User entity
 * Generated by Enhanced JDBC DAO Generator
 */
public class UserRowMapper implements RowMapper<User> {

    @Override
    public User mapRow(ResultSet rs, int rowNum) throws SQLException {
        User entity = new User();

        entity.setLastName(rs.getString("last_name"));
        entity.setOrganisationsId(rs.getLong("organisations_id"));
        entity.setFailedAdditionalVerificationAttempts(rs.getInt("failed_additional_verification_attempts"));
        entity.setModifiedAt(rs.getLong("modified_at"));
        entity.setFailedChallengeQuestionAttempts(rs.getInt("failed_challenge_question_attempts"));
        entity.setLockedAt(rs.getLong("locked_at"));
        entity.setEmployeeId(rs.getString("employee_id"));
        entity.setFailedLoginAttempts(rs.getInt("failed_login_attempts"));
        entity.setType(rs.getString("type"));
        entity.setCreatedAt(rs.getLong("created_at"));
        entity.setFirstName(rs.getString("first_name"));
        entity.setArchived(rs.getBoolean("archived"));
        entity.setPasswordUpdatedAt(rs.getLong("password_updated_at"));
        entity.setChallengeQuestionsAnswer(rs.getString("challenge_questions_answer"));
        entity.setPassword(rs.getString("password"));
        entity.setChallengeQuestionsId(rs.getInt("challenge_questions_id"));
        entity.setCreatedBy(rs.getLong("created_by"));
        entity.setIsSystemUser(rs.getBoolean("is_system_user"));
        entity.setModifiedBy(rs.getLong("modified_by"));
        entity.setId(rs.getLong("id"));
        entity.setState(rs.getString("state"));
        entity.setDepartment(rs.getString("department"));
        entity.setEmail(rs.getString("email"));
        entity.setUsername(rs.getString("username"));

        return entity;
    }
}
