package com.example.daoGenerator.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import org.springframework.jdbc.core.RowMapper;
import com.example.pojogenerator.pojos.PasswordPolicies;

/**
 * Enhanced row mapper for PasswordPolicies entity
 * Generated by Enhanced JDBC DAO Generator
 */
public class PasswordPoliciesRowMapper implements RowMapper<PasswordPolicies> {

    @Override
    public PasswordPolicies mapRow(ResultSet rs, int rowNum) throws SQLException {
        PasswordPolicies entity = new PasswordPolicies();

        entity.setMinimumPasswordLength(rs.getInt("minimum_password_length"));
        entity.setPasswordExpiration(rs.getInt("password_expiration"));
        entity.setOrganisationsId(rs.getLong("organisations_id"));
        entity.setModifiedAt(rs.getLong("modified_at"));
        entity.setMaximumPasswordAge(rs.getInt("maximum_password_age"));
        entity.setMinimumLowercaseCharacters(rs.getInt("minimum_lowercase_characters"));
        entity.setMinimumPasswordHistory(rs.getInt("minimum_password_history"));
        entity.setMinimumNumericCharacters(rs.getInt("minimum_numeric_characters"));
        entity.setCreatedAt(rs.getLong("created_at"));
        entity.setAllowPasswordSimilarToUsernameOrEmail(rs.getBoolean("allow_password_similar_to_username_or_email"));
        entity.setCreatedBy(rs.getLong("created_by"));
        entity.setModifiedBy(rs.getLong("modified_by"));
        entity.setMinimumUppercaseCharacters(rs.getInt("minimum_uppercase_characters"));
        entity.setId(rs.getLong("id"));
        entity.setMinimumSpecialCharacters(rs.getInt("minimum_special_characters"));

        return entity;
    }
}
