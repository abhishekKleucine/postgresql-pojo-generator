package com.example.daoGenerator.dao.interfaces;

import java.util.List;
import java.util.Optional;
import com.example.pojogenerator.pojos.ParameterRuleMapping;

/**
 * Enhanced DAO interface for ParameterRuleMapping entity
 * Table: parameter_rule_mapping
 * Key Type: COMPOSITE_KEY
 * Generated by Enhanced JDBC DAO Generator
 */
public interface ParameterRuleMappingDao {

    // Composite key operations
    Optional<ParameterRuleMapping> findByTriggeringParametersIdAndParameterRulesIdAndImpactedParametersId(Long triggeringParametersId, Long parameterRulesId, Long impactedParametersId);
    void deleteByTriggeringParametersIdAndParameterRulesIdAndImpactedParametersId(Long triggeringParametersId, Long parameterRulesId, Long impactedParametersId);
    boolean existsByTriggeringParametersIdAndParameterRulesIdAndImpactedParametersId(Long triggeringParametersId, Long parameterRulesId, Long impactedParametersId);

    // Common operations
    List<ParameterRuleMapping> findAll();
    ParameterRuleMapping save(ParameterRuleMapping entity);
    long count();

    // Foreign key based finders
    List<ParameterRuleMapping> findByTriggeringParametersId(Long triggeringParametersId);
    List<ParameterRuleMapping> findByParameterRulesId(Long parameterRulesId);
    List<ParameterRuleMapping> findByImpactedParametersId(Long impactedParametersId);

}
