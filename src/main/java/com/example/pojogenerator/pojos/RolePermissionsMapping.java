package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: role_permissions_mapping
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: role_permissions_mapping
 * - Primary Keys: permissions_id, roles_id
 * 
 * Foreign Keys:
 * - permissions_id → permissions.id
 * - roles_id → roles.id
 * - created_by → users.id
 */
public class RolePermissionsMapping implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: permissions_id
     * Type: int8 NOT NULL
     * Primary Key
     * Foreign Key → permissions.id
     */
    private Long permissionsId;

    /**
     * Database column: roles_id
     * Type: int8 NOT NULL
     * Primary Key
     * Foreign Key → roles.id
     */
    private Long rolesId;

    /**
     * Database column: created_at
     * Type: int8 NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: created_by
     * Type: int8
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Default constructor
     */
    public RolePermissionsMapping() {
    }

    /**
     * Gets permissions_id
     * @return Long
     */
    public Long getPermissionsId() {
        return this.permissionsId;
    }

    /**
     * Sets permissions_id
     * @param permissionsId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setPermissionsId(Long permissionsId) {
        if (permissionsId == null) {
            throw new IllegalArgumentException("permissions_id cannot be null");
        }
        this.permissionsId = permissionsId;
    }

    /**
     * Gets roles_id
     * @return Long
     */
    public Long getRolesId() {
        return this.rolesId;
    }

    /**
     * Sets roles_id
     * @param rolesId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setRolesId(Long rolesId) {
        if (rolesId == null) {
            throw new IllegalArgumentException("roles_id cannot be null");
        }
        this.rolesId = rolesId;
    }

    /**
     * Gets created_at
     * @return Long
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets created_at
     * @param createdAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets created_by
     * @return Long
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets created_by
     * @param createdBy the value to set
     */
    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        RolePermissionsMapping other = (RolePermissionsMapping) obj;
        return Objects.equals(this.permissionsId, other.permissionsId) && Objects.equals(this.rolesId, other.rolesId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.permissionsId, this.rolesId);
    }

    @Override
    public String toString() {
        return "RolePermissionsMapping{" +
                "permissionsId=" + permissionsId +
                ", rolesId=" + rolesId +
                ", createdAt=" + createdAt +
                ", createdBy=" + createdBy +
                '}';
    }
}
