package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: r_stage_execution
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: r_stage_execution
 */
public class RStageExecution implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: id
     * Type: int8 NOT NULL
     */
    private Long id;

    /**
     * Database column: stages_id
     * Type: int8 NOT NULL
     */
    private Long stagesId;

    /**
     * Database column: jobs_id
     * Type: int8 NOT NULL
     */
    private Long jobsId;

    /**
     * Database column: stage_name
     * Type: varchar(255)
     */
    private String stageName;

    /**
     * Database column: total_tasks
     * Type: int4 NOT NULL
     */
    private Integer totalTasks;

    /**
     * Database column: completed_tasks
     * Type: int4 NOT NULL DEFAULT: 0
     */
    private Integer completedTasks;

    /**
     * Database column: tasks_in_progress
     * Type: bool NOT NULL DEFAULT: false
     */
    private Boolean tasksInProgress;

    /**
     * Default constructor
     */
    public RStageExecution() {
    }

    /**
     * Gets id
     * @return Long
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Sets id
     * @param id the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setId(Long id) {
        if (id == null) {
            throw new IllegalArgumentException("id cannot be null");
        }
        this.id = id;
    }

    /**
     * Gets stages_id
     * @return Long
     */
    public Long getStagesId() {
        return this.stagesId;
    }

    /**
     * Sets stages_id
     * @param stagesId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setStagesId(Long stagesId) {
        if (stagesId == null) {
            throw new IllegalArgumentException("stages_id cannot be null");
        }
        this.stagesId = stagesId;
    }

    /**
     * Gets jobs_id
     * @return Long
     */
    public Long getJobsId() {
        return this.jobsId;
    }

    /**
     * Sets jobs_id
     * @param jobsId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setJobsId(Long jobsId) {
        if (jobsId == null) {
            throw new IllegalArgumentException("jobs_id cannot be null");
        }
        this.jobsId = jobsId;
    }

    /**
     * Gets stage_name
     * @return String
     */
    public String getStageName() {
        return this.stageName;
    }

    /**
     * Sets stage_name
     * @param stageName the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setStageName(String stageName) {
        if (stageName != null && stageName.length() > 255) {
            throw new IllegalArgumentException("stage_name length cannot exceed 255 characters");
        }
        this.stageName = stageName;
    }

    /**
     * Gets total_tasks
     * @return Integer
     */
    public Integer getTotalTasks() {
        return this.totalTasks;
    }

    /**
     * Sets total_tasks
     * @param totalTasks the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setTotalTasks(Integer totalTasks) {
        if (totalTasks == null) {
            throw new IllegalArgumentException("total_tasks cannot be null");
        }
        this.totalTasks = totalTasks;
    }

    /**
     * Gets completed_tasks
     * @return Integer
     */
    public Integer getCompletedTasks() {
        return this.completedTasks;
    }

    /**
     * Sets completed_tasks
     * @param completedTasks the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCompletedTasks(Integer completedTasks) {
        if (completedTasks == null) {
            throw new IllegalArgumentException("completed_tasks cannot be null");
        }
        this.completedTasks = completedTasks;
    }

    /**
     * Gets tasks_in_progress
     * @return Boolean
     */
    public Boolean getTasksInProgress() {
        return this.tasksInProgress;
    }

    /**
     * Sets tasks_in_progress
     * @param tasksInProgress the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setTasksInProgress(Boolean tasksInProgress) {
        if (tasksInProgress == null) {
            throw new IllegalArgumentException("tasks_in_progress cannot be null");
        }
        this.tasksInProgress = tasksInProgress;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        RStageExecution other = (RStageExecution) obj;
        return Objects.equals(this.id, other.id) && Objects.equals(this.stagesId, other.stagesId) && Objects.equals(this.jobsId, other.jobsId) && Objects.equals(this.stageName, other.stageName) && Objects.equals(this.totalTasks, other.totalTasks) && Objects.equals(this.completedTasks, other.completedTasks) && Objects.equals(this.tasksInProgress, other.tasksInProgress);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.id, this.stagesId, this.jobsId, this.stageName, this.totalTasks, this.completedTasks, this.tasksInProgress);
    }

    @Override
    public String toString() {
        return "RStageExecution{" +
                "id=" + id +
                ", stagesId=" + stagesId +
                ", jobsId=" + jobsId +
                ", stageName=" + stageName +
                ", totalTasks=" + totalTasks +
                ", completedTasks=" + completedTasks +
                ", tasksInProgress=" + tasksInProgress +
                '}';
    }
}
