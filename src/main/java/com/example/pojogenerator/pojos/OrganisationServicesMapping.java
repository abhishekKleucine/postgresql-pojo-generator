package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: organisation_services_mapping
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: organisation_services_mapping
 * - Primary Keys: organisations_id, services_id
 * 
 * Foreign Keys:
 * - organisations_id → organisations.id
 * - services_id → services.id
 * - created_by → users.id
 */
public class OrganisationServicesMapping implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: organisations_id
     * Type: int8 NOT NULL
     * Primary Key
     * Foreign Key → organisations.id
     */
    private Long organisationsId;

    /**
     * Database column: services_id
     * Type: varchar(255) NOT NULL
     * Primary Key
     * Foreign Key → services.id
     */
    private String servicesId;

    /**
     * Database column: created_at
     * Type: int8 NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: created_by
     * Type: int8
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Database column: fqdn
     * Type: text(2147483647) NOT NULL
     */
    private String fqdn;

    /**
     * Default constructor
     */
    public OrganisationServicesMapping() {
    }

    /**
     * Gets organisations_id
     * @return Long
     */
    public Long getOrganisationsId() {
        return this.organisationsId;
    }

    /**
     * Sets organisations_id
     * @param organisationsId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setOrganisationsId(Long organisationsId) {
        if (organisationsId == null) {
            throw new IllegalArgumentException("organisations_id cannot be null");
        }
        this.organisationsId = organisationsId;
    }

    /**
     * Gets services_id
     * @return String
     */
    public String getServicesId() {
        return this.servicesId;
    }

    /**
     * Sets services_id
     * @param servicesId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setServicesId(String servicesId) {
        if (servicesId == null) {
            throw new IllegalArgumentException("services_id cannot be null");
        }
        if (servicesId != null && servicesId.length() > 255) {
            throw new IllegalArgumentException("services_id length cannot exceed 255 characters");
        }
        this.servicesId = servicesId;
    }

    /**
     * Gets created_at
     * @return Long
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets created_at
     * @param createdAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets created_by
     * @return Long
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets created_by
     * @param createdBy the value to set
     */
    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Gets fqdn
     * @return String
     */
    public String getFqdn() {
        return this.fqdn;
    }

    /**
     * Sets fqdn
     * @param fqdn the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setFqdn(String fqdn) {
        if (fqdn == null) {
            throw new IllegalArgumentException("fqdn cannot be null");
        }
        if (fqdn != null && fqdn.length() > 2147483647) {
            throw new IllegalArgumentException("fqdn length cannot exceed 2147483647 characters");
        }
        this.fqdn = fqdn;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        OrganisationServicesMapping other = (OrganisationServicesMapping) obj;
        return Objects.equals(this.organisationsId, other.organisationsId) && Objects.equals(this.servicesId, other.servicesId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.organisationsId, this.servicesId);
    }

    @Override
    public String toString() {
        return "OrganisationServicesMapping{" +
                "organisationsId=" + organisationsId +
                ", servicesId=" + servicesId +
                ", createdAt=" + createdAt +
                ", createdBy=" + createdBy +
                ", fqdn=" + fqdn +
                '}';
    }
}
