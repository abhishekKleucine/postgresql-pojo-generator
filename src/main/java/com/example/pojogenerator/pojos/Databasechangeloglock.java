package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;
import java.time.*;

/**
 * POJO class for table: databasechangeloglock
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: databasechangeloglock
 * - Primary Keys: id
 */
public class Databasechangeloglock implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: id
     * Type: int4 NOT NULL
     * Primary Key
     */
    private Integer id;

    /**
     * Database column: locked
     * Type: bool NOT NULL
     */
    private Boolean locked;

    /**
     * Database column: lockgranted
     * Type: timestamp
     */
    private java.time.LocalDateTime lockgranted;

    /**
     * Database column: lockedby
     * Type: varchar(255)
     */
    private String lockedby;

    /**
     * Default constructor
     */
    public Databasechangeloglock() {
    }

    /**
     * Gets id
     * @return Integer
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Sets id
     * @param id the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setId(Integer id) {
        if (id == null) {
            throw new IllegalArgumentException("id cannot be null");
        }
        this.id = id;
    }

    /**
     * Gets locked
     * @return Boolean
     */
    public Boolean getLocked() {
        return this.locked;
    }

    /**
     * Sets locked
     * @param locked the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setLocked(Boolean locked) {
        if (locked == null) {
            throw new IllegalArgumentException("locked cannot be null");
        }
        this.locked = locked;
    }

    /**
     * Gets lockgranted
     * @return java.time.LocalDateTime
     */
    public java.time.LocalDateTime getLockgranted() {
        return this.lockgranted;
    }

    /**
     * Sets lockgranted
     * @param lockgranted the value to set
     */
    public void setLockgranted(java.time.LocalDateTime lockgranted) {
        this.lockgranted = lockgranted;
    }

    /**
     * Gets lockedby
     * @return String
     */
    public String getLockedby() {
        return this.lockedby;
    }

    /**
     * Sets lockedby
     * @param lockedby the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setLockedby(String lockedby) {
        if (lockedby != null && lockedby.length() > 255) {
            throw new IllegalArgumentException("lockedby length cannot exceed 255 characters");
        }
        this.lockedby = lockedby;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Databasechangeloglock other = (Databasechangeloglock) obj;
        return Objects.equals(this.id, other.id);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.id);
    }

    @Override
    public String toString() {
        return "Databasechangeloglock{" +
                "id=" + id +
                ", locked=" + locked +
                ", lockgranted=" + lockgranted +
                ", lockedby=" + lockedby +
                '}';
    }
}
