package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: action_facility_mapping
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: action_facility_mapping
 * 
 * Foreign Keys:
 * - actions_id → actions.id
 * - facilities_id → facilities.id
 * - created_by → users.id
 * - modified_by → users.id
 */
public class ActionFacilityMapping implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: actions_id
     * Type: int8 NOT NULL
     * Foreign Key → actions.id
     */
    private Long actionsId;

    /**
     * Database column: facilities_id
     * Type: int8 NOT NULL
     * Foreign Key → facilities.id
     */
    private Long facilitiesId;

    /**
     * Database column: created_at
     * Type: int8 NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: modified_at
     * Type: int8 NOT NULL
     */
    private Long modifiedAt;

    /**
     * Database column: created_by
     * Type: int8 NOT NULL
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Database column: modified_by
     * Type: int8 NOT NULL
     * Foreign Key → users.id
     */
    private Long modifiedBy;

    /**
     * Default constructor
     */
    public ActionFacilityMapping() {
    }

    /**
     * Gets actions_id
     * @return Long
     */
    public Long getActionsId() {
        return this.actionsId;
    }

    /**
     * Sets actions_id
     * @param actionsId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setActionsId(Long actionsId) {
        if (actionsId == null) {
            throw new IllegalArgumentException("actions_id cannot be null");
        }
        this.actionsId = actionsId;
    }

    /**
     * Gets facilities_id
     * @return Long
     */
    public Long getFacilitiesId() {
        return this.facilitiesId;
    }

    /**
     * Sets facilities_id
     * @param facilitiesId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setFacilitiesId(Long facilitiesId) {
        if (facilitiesId == null) {
            throw new IllegalArgumentException("facilities_id cannot be null");
        }
        this.facilitiesId = facilitiesId;
    }

    /**
     * Gets created_at
     * @return Long
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets created_at
     * @param createdAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets modified_at
     * @return Long
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets modified_at
     * @param modifiedAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedAt(Long modifiedAt) {
        if (modifiedAt == null) {
            throw new IllegalArgumentException("modified_at cannot be null");
        }
        this.modifiedAt = modifiedAt;
    }

    /**
     * Gets created_by
     * @return Long
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets created_by
     * @param createdBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedBy(Long createdBy) {
        if (createdBy == null) {
            throw new IllegalArgumentException("created_by cannot be null");
        }
        this.createdBy = createdBy;
    }

    /**
     * Gets modified_by
     * @return Long
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets modified_by
     * @param modifiedBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedBy(Long modifiedBy) {
        if (modifiedBy == null) {
            throw new IllegalArgumentException("modified_by cannot be null");
        }
        this.modifiedBy = modifiedBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        ActionFacilityMapping other = (ActionFacilityMapping) obj;
        return Objects.equals(this.actionsId, other.actionsId) && Objects.equals(this.facilitiesId, other.facilitiesId) && Objects.equals(this.createdAt, other.createdAt) && Objects.equals(this.modifiedAt, other.modifiedAt) && Objects.equals(this.createdBy, other.createdBy) && Objects.equals(this.modifiedBy, other.modifiedBy);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.actionsId, this.facilitiesId, this.createdAt, this.modifiedAt, this.createdBy, this.modifiedBy);
    }

    @Override
    public String toString() {
        return "ActionFacilityMapping{" +
                "actionsId=" + actionsId +
                ", facilitiesId=" + facilitiesId +
                ", createdAt=" + createdAt +
                ", modifiedAt=" + modifiedAt +
                ", createdBy=" + createdBy +
                ", modifiedBy=" + modifiedBy +
                '}';
    }
}
