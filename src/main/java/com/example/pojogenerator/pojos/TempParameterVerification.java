package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: temp_parameter_verifications
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: temp_parameter_verifications
 * - Primary Keys: id
 * 
 * Foreign Keys:
 * - jobs_id → jobs.id
 * - temp_parameter_values_id → temp_parameter_values.id
 * - user_groups_id → user_groups.id
 */
public class TempParameterVerification implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: id
     * Type: int8 NOT NULL
     * Primary Key
     */
    private Long id;

    /**
     * Database column: comments
     * Type: text(2147483647)
     */
    private String comments;

    /**
     * Database column: jobs_id
     * Type: int8 NOT NULL
     * Foreign Key → jobs.id
     */
    private Long jobsId;

    /**
     * Database column: temp_parameter_values_id
     * Type: int8 NOT NULL
     * Foreign Key → temp_parameter_values.id
     */
    private Long tempParameterValuesId;

    /**
     * Database column: verification_status
     * Type: varchar(50) NOT NULL
     */
    private String verificationStatus;

    /**
     * Database column: verification_type
     * Type: varchar(50) NOT NULL
     */
    private String verificationType;

    /**
     * Database column: created_at
     * Type: int8 NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: created_by
     * Type: int8 NOT NULL
     */
    private Long createdBy;

    /**
     * Database column: modified_by
     * Type: int8 NOT NULL
     */
    private Long modifiedBy;

    /**
     * Database column: modified_at
     * Type: int8 NOT NULL
     */
    private Long modifiedAt;

    /**
     * Database column: users_id
     * Type: int8 NOT NULL
     */
    private Long usersId;

    /**
     * Database column: user_groups_id
     * Type: int8
     * Foreign Key → user_groups.id
     */
    private Long userGroupsId;

    /**
     * Database column: is_bulk
     * Type: bool DEFAULT: false
     */
    private Boolean isBulk;

    /**
     * Default constructor
     */
    public TempParameterVerification() {
    }

    /**
     * Gets id
     * @return Long
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Sets id
     * @param id the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setId(Long id) {
        if (id == null) {
            throw new IllegalArgumentException("id cannot be null");
        }
        this.id = id;
    }

    /**
     * Gets comments
     * @return String
     */
    public String getComments() {
        return this.comments;
    }

    /**
     * Sets comments
     * @param comments the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setComments(String comments) {
        if (comments != null && comments.length() > 2147483647) {
            throw new IllegalArgumentException("comments length cannot exceed 2147483647 characters");
        }
        this.comments = comments;
    }

    /**
     * Gets jobs_id
     * @return Long
     */
    public Long getJobsId() {
        return this.jobsId;
    }

    /**
     * Sets jobs_id
     * @param jobsId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setJobsId(Long jobsId) {
        if (jobsId == null) {
            throw new IllegalArgumentException("jobs_id cannot be null");
        }
        this.jobsId = jobsId;
    }

    /**
     * Gets temp_parameter_values_id
     * @return Long
     */
    public Long getTempParameterValuesId() {
        return this.tempParameterValuesId;
    }

    /**
     * Sets temp_parameter_values_id
     * @param tempParameterValuesId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setTempParameterValuesId(Long tempParameterValuesId) {
        if (tempParameterValuesId == null) {
            throw new IllegalArgumentException("temp_parameter_values_id cannot be null");
        }
        this.tempParameterValuesId = tempParameterValuesId;
    }

    /**
     * Gets verification_status
     * @return String
     */
    public String getVerificationStatus() {
        return this.verificationStatus;
    }

    /**
     * Sets verification_status
     * @param verificationStatus the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setVerificationStatus(String verificationStatus) {
        if (verificationStatus == null) {
            throw new IllegalArgumentException("verification_status cannot be null");
        }
        if (verificationStatus != null && verificationStatus.length() > 50) {
            throw new IllegalArgumentException("verification_status length cannot exceed 50 characters");
        }
        this.verificationStatus = verificationStatus;
    }

    /**
     * Gets verification_type
     * @return String
     */
    public String getVerificationType() {
        return this.verificationType;
    }

    /**
     * Sets verification_type
     * @param verificationType the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setVerificationType(String verificationType) {
        if (verificationType == null) {
            throw new IllegalArgumentException("verification_type cannot be null");
        }
        if (verificationType != null && verificationType.length() > 50) {
            throw new IllegalArgumentException("verification_type length cannot exceed 50 characters");
        }
        this.verificationType = verificationType;
    }

    /**
     * Gets created_at
     * @return Long
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets created_at
     * @param createdAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets created_by
     * @return Long
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets created_by
     * @param createdBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedBy(Long createdBy) {
        if (createdBy == null) {
            throw new IllegalArgumentException("created_by cannot be null");
        }
        this.createdBy = createdBy;
    }

    /**
     * Gets modified_by
     * @return Long
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets modified_by
     * @param modifiedBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedBy(Long modifiedBy) {
        if (modifiedBy == null) {
            throw new IllegalArgumentException("modified_by cannot be null");
        }
        this.modifiedBy = modifiedBy;
    }

    /**
     * Gets modified_at
     * @return Long
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets modified_at
     * @param modifiedAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedAt(Long modifiedAt) {
        if (modifiedAt == null) {
            throw new IllegalArgumentException("modified_at cannot be null");
        }
        this.modifiedAt = modifiedAt;
    }

    /**
     * Gets users_id
     * @return Long
     */
    public Long getUsersId() {
        return this.usersId;
    }

    /**
     * Sets users_id
     * @param usersId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setUsersId(Long usersId) {
        if (usersId == null) {
            throw new IllegalArgumentException("users_id cannot be null");
        }
        this.usersId = usersId;
    }

    /**
     * Gets user_groups_id
     * @return Long
     */
    public Long getUserGroupsId() {
        return this.userGroupsId;
    }

    /**
     * Sets user_groups_id
     * @param userGroupsId the value to set
     */
    public void setUserGroupsId(Long userGroupsId) {
        this.userGroupsId = userGroupsId;
    }

    /**
     * Gets is_bulk
     * @return Boolean
     */
    public Boolean getIsBulk() {
        return this.isBulk;
    }

    /**
     * Sets is_bulk
     * @param isBulk the value to set
     */
    public void setIsBulk(Boolean isBulk) {
        this.isBulk = isBulk;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        TempParameterVerification other = (TempParameterVerification) obj;
        return Objects.equals(this.id, other.id);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.id);
    }

    @Override
    public String toString() {
        return "TempParameterVerification{" +
                "id=" + id +
                ", comments=" + comments +
                ", jobsId=" + jobsId +
                ", tempParameterValuesId=" + tempParameterValuesId +
                ", verificationStatus=" + verificationStatus +
                ", verificationType=" + verificationType +
                ", createdAt=" + createdAt +
                ", createdBy=" + createdBy +
                ", modifiedBy=" + modifiedBy +
                ", modifiedAt=" + modifiedAt +
                ", usersId=" + usersId +
                ", userGroupsId=" + userGroupsId +
                ", isBulk=" + isBulk +
                '}';
    }
}
