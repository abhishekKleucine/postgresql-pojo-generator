package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;
import com.fasterxml.jackson.databind.JsonNode;

/**
 * POJO class for table: organisation_settings
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: organisation_settings
 * - Primary Keys: id
 * 
 * Indexes:
 * - uk_e569e2kfei3fndvp2h698faw6 (UNIQUE): organisations_id
 * 
 * Foreign Keys:
 * - created_by → users.id
 * - modified_by → users.id
 * - organisations_id → organisations.id
 */
public class OrganisationSetting implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: id
     * Type: int8 NOT NULL
     * Primary Key
     */
    private Long id;

    /**
     * Database column: created_at
     * Type: int8 NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: created_by
     * Type: int8
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Database column: modified_at
     * Type: int8 NOT NULL
     */
    private Long modifiedAt;

    /**
     * Database column: modified_by
     * Type: int8
     * Foreign Key → users.id
     */
    private Long modifiedBy;

    /**
     * Database column: auto_unlock_after
     * Type: int4
     */
    private Integer autoUnlockAfter;

    /**
     * Database column: max_failed_login_attempts
     * Type: int4
     */
    private Integer maxFailedLoginAttempts;

    /**
     * Database column: organisations_id
     * Type: int8 NOT NULL
     * Foreign Key → organisations.id
     */
    private Long organisationsId;

    /**
     * Database column: password_reset_token_expiration
     * Type: int4
     */
    private Integer passwordResetTokenExpiration;

    /**
     * Database column: registration_token_expiration
     * Type: int4
     */
    private Integer registrationTokenExpiration;

    /**
     * Database column: session_idle_timeout
     * Type: int4
     */
    private Integer sessionIdleTimeout;

    /**
     * Database column: logo_url
     * Type: varchar(255)
     */
    private String logoUrl;

    /**
     * Database column: max_failed_additional_verification_attempts
     * Type: int4 DEFAULT: 3
     */
    private Integer maxFailedAdditionalVerificationAttempts;

    /**
     * Database column: max_failed_challenge_question_attempts
     * Type: int4 DEFAULT: 3
     */
    private Integer maxFailedChallengeQuestionAttempts;

    /**
     * Database column: extras
     * Type: jsonb DEFAULT: '{}'::jsonb
     */
    private JsonNode extras;

    /**
     * Database column: feature_flags
     * Type: jsonb DEFAULT: '{"metabaseReports": false}'::jsonb
     */
    private JsonNode featureFlags;

    /**
     * Default constructor
     */
    public OrganisationSetting() {
    }

    /**
     * Gets id
     * @return Long
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Sets id
     * @param id the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setId(Long id) {
        if (id == null) {
            throw new IllegalArgumentException("id cannot be null");
        }
        this.id = id;
    }

    /**
     * Gets created_at
     * @return Long
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets created_at
     * @param createdAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets created_by
     * @return Long
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets created_by
     * @param createdBy the value to set
     */
    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Gets modified_at
     * @return Long
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets modified_at
     * @param modifiedAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedAt(Long modifiedAt) {
        if (modifiedAt == null) {
            throw new IllegalArgumentException("modified_at cannot be null");
        }
        this.modifiedAt = modifiedAt;
    }

    /**
     * Gets modified_by
     * @return Long
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets modified_by
     * @param modifiedBy the value to set
     */
    public void setModifiedBy(Long modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    /**
     * Gets auto_unlock_after
     * @return Integer
     */
    public Integer getAutoUnlockAfter() {
        return this.autoUnlockAfter;
    }

    /**
     * Sets auto_unlock_after
     * @param autoUnlockAfter the value to set
     */
    public void setAutoUnlockAfter(Integer autoUnlockAfter) {
        this.autoUnlockAfter = autoUnlockAfter;
    }

    /**
     * Gets max_failed_login_attempts
     * @return Integer
     */
    public Integer getMaxFailedLoginAttempts() {
        return this.maxFailedLoginAttempts;
    }

    /**
     * Sets max_failed_login_attempts
     * @param maxFailedLoginAttempts the value to set
     */
    public void setMaxFailedLoginAttempts(Integer maxFailedLoginAttempts) {
        this.maxFailedLoginAttempts = maxFailedLoginAttempts;
    }

    /**
     * Gets organisations_id
     * @return Long
     */
    public Long getOrganisationsId() {
        return this.organisationsId;
    }

    /**
     * Sets organisations_id
     * @param organisationsId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setOrganisationsId(Long organisationsId) {
        if (organisationsId == null) {
            throw new IllegalArgumentException("organisations_id cannot be null");
        }
        this.organisationsId = organisationsId;
    }

    /**
     * Gets password_reset_token_expiration
     * @return Integer
     */
    public Integer getPasswordResetTokenExpiration() {
        return this.passwordResetTokenExpiration;
    }

    /**
     * Sets password_reset_token_expiration
     * @param passwordResetTokenExpiration the value to set
     */
    public void setPasswordResetTokenExpiration(Integer passwordResetTokenExpiration) {
        this.passwordResetTokenExpiration = passwordResetTokenExpiration;
    }

    /**
     * Gets registration_token_expiration
     * @return Integer
     */
    public Integer getRegistrationTokenExpiration() {
        return this.registrationTokenExpiration;
    }

    /**
     * Sets registration_token_expiration
     * @param registrationTokenExpiration the value to set
     */
    public void setRegistrationTokenExpiration(Integer registrationTokenExpiration) {
        this.registrationTokenExpiration = registrationTokenExpiration;
    }

    /**
     * Gets session_idle_timeout
     * @return Integer
     */
    public Integer getSessionIdleTimeout() {
        return this.sessionIdleTimeout;
    }

    /**
     * Sets session_idle_timeout
     * @param sessionIdleTimeout the value to set
     */
    public void setSessionIdleTimeout(Integer sessionIdleTimeout) {
        this.sessionIdleTimeout = sessionIdleTimeout;
    }

    /**
     * Gets logo_url
     * @return String
     */
    public String getLogoUrl() {
        return this.logoUrl;
    }

    /**
     * Sets logo_url
     * @param logoUrl the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setLogoUrl(String logoUrl) {
        if (logoUrl != null && logoUrl.length() > 255) {
            throw new IllegalArgumentException("logo_url length cannot exceed 255 characters");
        }
        this.logoUrl = logoUrl;
    }

    /**
     * Gets max_failed_additional_verification_attempts
     * @return Integer
     */
    public Integer getMaxFailedAdditionalVerificationAttempts() {
        return this.maxFailedAdditionalVerificationAttempts;
    }

    /**
     * Sets max_failed_additional_verification_attempts
     * @param maxFailedAdditionalVerificationAttempts the value to set
     */
    public void setMaxFailedAdditionalVerificationAttempts(Integer maxFailedAdditionalVerificationAttempts) {
        this.maxFailedAdditionalVerificationAttempts = maxFailedAdditionalVerificationAttempts;
    }

    /**
     * Gets max_failed_challenge_question_attempts
     * @return Integer
     */
    public Integer getMaxFailedChallengeQuestionAttempts() {
        return this.maxFailedChallengeQuestionAttempts;
    }

    /**
     * Sets max_failed_challenge_question_attempts
     * @param maxFailedChallengeQuestionAttempts the value to set
     */
    public void setMaxFailedChallengeQuestionAttempts(Integer maxFailedChallengeQuestionAttempts) {
        this.maxFailedChallengeQuestionAttempts = maxFailedChallengeQuestionAttempts;
    }

    /**
     * Gets extras
     * @return JsonNode
     */
    public JsonNode getExtras() {
        return this.extras;
    }

    /**
     * Sets extras
     * @param extras the value to set
     */
    public void setExtras(JsonNode extras) {
        this.extras = extras;
    }

    /**
     * Gets feature_flags
     * @return JsonNode
     */
    public JsonNode getFeatureFlags() {
        return this.featureFlags;
    }

    /**
     * Sets feature_flags
     * @param featureFlags the value to set
     */
    public void setFeatureFlags(JsonNode featureFlags) {
        this.featureFlags = featureFlags;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        OrganisationSetting other = (OrganisationSetting) obj;
        return Objects.equals(this.id, other.id);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.id);
    }

    @Override
    public String toString() {
        return "OrganisationSetting{" +
                "id=" + id +
                ", createdAt=" + createdAt +
                ", createdBy=" + createdBy +
                ", modifiedAt=" + modifiedAt +
                ", modifiedBy=" + modifiedBy +
                ", autoUnlockAfter=" + autoUnlockAfter +
                ", maxFailedLoginAttempts=" + maxFailedLoginAttempts +
                ", organisationsId=" + organisationsId +
                ", passwordResetTokenExpiration=" + passwordResetTokenExpiration +
                ", registrationTokenExpiration=" + registrationTokenExpiration +
                ", sessionIdleTimeout=" + sessionIdleTimeout +
                ", logoUrl=" + logoUrl +
                ", maxFailedAdditionalVerificationAttempts=" + maxFailedAdditionalVerificationAttempts +
                ", maxFailedChallengeQuestionAttempts=" + maxFailedChallengeQuestionAttempts +
                ", extras=" + extras +
                ", featureFlags=" + featureFlags +
                '}';
    }
}
