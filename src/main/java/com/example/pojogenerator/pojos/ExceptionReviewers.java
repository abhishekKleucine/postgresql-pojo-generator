package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: exception_reviewers
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: exception_reviewers
 * - Primary Keys: id
 * 
 * Foreign Keys:
 * - user_groups_id → user_groups.id
 * - users_id → users.id
 * - exceptions_id → exceptions.id
 */
public class ExceptionReviewers implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: id
     * Type: int8 NOT NULL
     * Primary Key
     */
    private Long id;

    /**
     * Database column: user_groups_id
     * Type: int8
     * Foreign Key → user_groups.id
     */
    private Long userGroupsId;

    /**
     * Database column: users_id
     * Type: int8
     * Foreign Key → users.id
     */
    private Long usersId;

    /**
     * Database column: exceptions_id
     * Type: int8 NOT NULL
     * Foreign Key → exceptions.id
     */
    private Long exceptionsId;

    /**
     * Database column: action_performed
     * Type: bool NOT NULL DEFAULT: false
     */
    private Boolean actionPerformed;

    /**
     * Database column: created_by
     * Type: int8 NOT NULL
     */
    private Long createdBy;

    /**
     * Database column: created_at
     * Type: int8 NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: modified_by
     * Type: int8 NOT NULL
     */
    private Long modifiedBy;

    /**
     * Database column: modified_at
     * Type: int8 NOT NULL
     */
    private Long modifiedAt;

    /**
     * Default constructor
     */
    public ExceptionReviewers() {
    }

    /**
     * Gets id
     * @return Long
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Sets id
     * @param id the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setId(Long id) {
        if (id == null) {
            throw new IllegalArgumentException("id cannot be null");
        }
        this.id = id;
    }

    /**
     * Gets user_groups_id
     * @return Long
     */
    public Long getUserGroupsId() {
        return this.userGroupsId;
    }

    /**
     * Sets user_groups_id
     * @param userGroupsId the value to set
     */
    public void setUserGroupsId(Long userGroupsId) {
        this.userGroupsId = userGroupsId;
    }

    /**
     * Gets users_id
     * @return Long
     */
    public Long getUsersId() {
        return this.usersId;
    }

    /**
     * Sets users_id
     * @param usersId the value to set
     */
    public void setUsersId(Long usersId) {
        this.usersId = usersId;
    }

    /**
     * Gets exceptions_id
     * @return Long
     */
    public Long getExceptionsId() {
        return this.exceptionsId;
    }

    /**
     * Sets exceptions_id
     * @param exceptionsId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setExceptionsId(Long exceptionsId) {
        if (exceptionsId == null) {
            throw new IllegalArgumentException("exceptions_id cannot be null");
        }
        this.exceptionsId = exceptionsId;
    }

    /**
     * Gets action_performed
     * @return Boolean
     */
    public Boolean getActionPerformed() {
        return this.actionPerformed;
    }

    /**
     * Sets action_performed
     * @param actionPerformed the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setActionPerformed(Boolean actionPerformed) {
        if (actionPerformed == null) {
            throw new IllegalArgumentException("action_performed cannot be null");
        }
        this.actionPerformed = actionPerformed;
    }

    /**
     * Gets created_by
     * @return Long
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets created_by
     * @param createdBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedBy(Long createdBy) {
        if (createdBy == null) {
            throw new IllegalArgumentException("created_by cannot be null");
        }
        this.createdBy = createdBy;
    }

    /**
     * Gets created_at
     * @return Long
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets created_at
     * @param createdAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets modified_by
     * @return Long
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets modified_by
     * @param modifiedBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedBy(Long modifiedBy) {
        if (modifiedBy == null) {
            throw new IllegalArgumentException("modified_by cannot be null");
        }
        this.modifiedBy = modifiedBy;
    }

    /**
     * Gets modified_at
     * @return Long
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets modified_at
     * @param modifiedAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedAt(Long modifiedAt) {
        if (modifiedAt == null) {
            throw new IllegalArgumentException("modified_at cannot be null");
        }
        this.modifiedAt = modifiedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        ExceptionReviewers other = (ExceptionReviewers) obj;
        return Objects.equals(this.id, other.id);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.id);
    }

    @Override
    public String toString() {
        return "ExceptionReviewers{" +
                "id=" + id +
                ", userGroupsId=" + userGroupsId +
                ", usersId=" + usersId +
                ", exceptionsId=" + exceptionsId +
                ", actionPerformed=" + actionPerformed +
                ", createdBy=" + createdBy +
                ", createdAt=" + createdAt +
                ", modifiedBy=" + modifiedBy +
                ", modifiedAt=" + modifiedAt +
                '}';
    }
}
