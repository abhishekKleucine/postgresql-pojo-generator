package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: temp_parameter_value_media_mapping
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: temp_parameter_value_media_mapping
 * - Primary Keys: medias_id, temp_parameter_values_id
 * 
 * Foreign Keys:
 * - medias_id → medias.id
 * - temp_parameter_values_id → temp_parameter_values.id
 * - created_by → users.id
 * - modified_by → users.id
 */
public class TempParameterValueMediaMapping implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: medias_id
     * Type: int8 NOT NULL
     * Primary Key
     * Foreign Key → medias.id
     */
    private Long mediasId;

    /**
     * Database column: temp_parameter_values_id
     * Type: int8 NOT NULL
     * Primary Key
     * Foreign Key → temp_parameter_values.id
     */
    private Long tempParameterValuesId;

    /**
     * Database column: archived
     * Type: bool DEFAULT: false
     */
    private Boolean archived;

    /**
     * Database column: created_at
     * Type: int8 NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: modified_at
     * Type: int8 NOT NULL
     */
    private Long modifiedAt;

    /**
     * Database column: created_by
     * Type: int8 NOT NULL
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Database column: modified_by
     * Type: int8 NOT NULL
     * Foreign Key → users.id
     */
    private Long modifiedBy;

    /**
     * Default constructor
     */
    public TempParameterValueMediaMapping() {
    }

    /**
     * Gets medias_id
     * @return Long
     */
    public Long getMediasId() {
        return this.mediasId;
    }

    /**
     * Sets medias_id
     * @param mediasId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setMediasId(Long mediasId) {
        if (mediasId == null) {
            throw new IllegalArgumentException("medias_id cannot be null");
        }
        this.mediasId = mediasId;
    }

    /**
     * Gets temp_parameter_values_id
     * @return Long
     */
    public Long getTempParameterValuesId() {
        return this.tempParameterValuesId;
    }

    /**
     * Sets temp_parameter_values_id
     * @param tempParameterValuesId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setTempParameterValuesId(Long tempParameterValuesId) {
        if (tempParameterValuesId == null) {
            throw new IllegalArgumentException("temp_parameter_values_id cannot be null");
        }
        this.tempParameterValuesId = tempParameterValuesId;
    }

    /**
     * Gets archived
     * @return Boolean
     */
    public Boolean getArchived() {
        return this.archived;
    }

    /**
     * Sets archived
     * @param archived the value to set
     */
    public void setArchived(Boolean archived) {
        this.archived = archived;
    }

    /**
     * Gets created_at
     * @return Long
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets created_at
     * @param createdAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets modified_at
     * @return Long
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets modified_at
     * @param modifiedAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedAt(Long modifiedAt) {
        if (modifiedAt == null) {
            throw new IllegalArgumentException("modified_at cannot be null");
        }
        this.modifiedAt = modifiedAt;
    }

    /**
     * Gets created_by
     * @return Long
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets created_by
     * @param createdBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedBy(Long createdBy) {
        if (createdBy == null) {
            throw new IllegalArgumentException("created_by cannot be null");
        }
        this.createdBy = createdBy;
    }

    /**
     * Gets modified_by
     * @return Long
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets modified_by
     * @param modifiedBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedBy(Long modifiedBy) {
        if (modifiedBy == null) {
            throw new IllegalArgumentException("modified_by cannot be null");
        }
        this.modifiedBy = modifiedBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        TempParameterValueMediaMapping other = (TempParameterValueMediaMapping) obj;
        return Objects.equals(this.mediasId, other.mediasId) && Objects.equals(this.tempParameterValuesId, other.tempParameterValuesId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.mediasId, this.tempParameterValuesId);
    }

    @Override
    public String toString() {
        return "TempParameterValueMediaMapping{" +
                "mediasId=" + mediasId +
                ", tempParameterValuesId=" + tempParameterValuesId +
                ", archived=" + archived +
                ", createdAt=" + createdAt +
                ", modifiedAt=" + modifiedAt +
                ", createdBy=" + createdBy +
                ", modifiedBy=" + modifiedBy +
                '}';
    }
}
