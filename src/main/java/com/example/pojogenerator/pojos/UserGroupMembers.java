package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: user_group_members
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: user_group_members
 * - Primary Keys: users_id, groups_id
 * 
 * Indexes:
 * - user_group_members_pk (UNIQUE): users_id, groups_id
 * 
 * Foreign Keys:
 * - users_id → users.id
 * - groups_id → user_groups.id
 * - created_by → users.id
 * - modified_by → users.id
 */
public class UserGroupMembers implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: users_id
     * Type: int8 NOT NULL
     * Primary Key
     * Foreign Key → users.id
     */
    private Long usersId;

    /**
     * Database column: groups_id
     * Type: int8 NOT NULL
     * Primary Key
     * Foreign Key → user_groups.id
     */
    private Long groupsId;

    /**
     * Database column: created_at
     * Type: int8 NOT NULL
     */
    private Long createdAt;

    /**
     * Database column: modified_at
     * Type: int8 NOT NULL
     */
    private Long modifiedAt;

    /**
     * Database column: created_by
     * Type: int8 NOT NULL
     * Foreign Key → users.id
     */
    private Long createdBy;

    /**
     * Database column: modified_by
     * Type: int8 NOT NULL
     * Foreign Key → users.id
     */
    private Long modifiedBy;

    /**
     * Default constructor
     */
    public UserGroupMembers() {
    }

    /**
     * Gets users_id
     * @return Long
     */
    public Long getUsersId() {
        return this.usersId;
    }

    /**
     * Sets users_id
     * @param usersId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setUsersId(Long usersId) {
        if (usersId == null) {
            throw new IllegalArgumentException("users_id cannot be null");
        }
        this.usersId = usersId;
    }

    /**
     * Gets groups_id
     * @return Long
     */
    public Long getGroupsId() {
        return this.groupsId;
    }

    /**
     * Sets groups_id
     * @param groupsId the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setGroupsId(Long groupsId) {
        if (groupsId == null) {
            throw new IllegalArgumentException("groups_id cannot be null");
        }
        this.groupsId = groupsId;
    }

    /**
     * Gets created_at
     * @return Long
     */
    public Long getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Sets created_at
     * @param createdAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedAt(Long createdAt) {
        if (createdAt == null) {
            throw new IllegalArgumentException("created_at cannot be null");
        }
        this.createdAt = createdAt;
    }

    /**
     * Gets modified_at
     * @return Long
     */
    public Long getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Sets modified_at
     * @param modifiedAt the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedAt(Long modifiedAt) {
        if (modifiedAt == null) {
            throw new IllegalArgumentException("modified_at cannot be null");
        }
        this.modifiedAt = modifiedAt;
    }

    /**
     * Gets created_by
     * @return Long
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Sets created_by
     * @param createdBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCreatedBy(Long createdBy) {
        if (createdBy == null) {
            throw new IllegalArgumentException("created_by cannot be null");
        }
        this.createdBy = createdBy;
    }

    /**
     * Gets modified_by
     * @return Long
     */
    public Long getModifiedBy() {
        return this.modifiedBy;
    }

    /**
     * Sets modified_by
     * @param modifiedBy the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setModifiedBy(Long modifiedBy) {
        if (modifiedBy == null) {
            throw new IllegalArgumentException("modified_by cannot be null");
        }
        this.modifiedBy = modifiedBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        UserGroupMembers other = (UserGroupMembers) obj;
        return Objects.equals(this.usersId, other.usersId) && Objects.equals(this.groupsId, other.groupsId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.usersId, this.groupsId);
    }

    @Override
    public String toString() {
        return "UserGroupMembers{" +
                "usersId=" + usersId +
                ", groupsId=" + groupsId +
                ", createdAt=" + createdAt +
                ", modifiedAt=" + modifiedAt +
                ", createdBy=" + createdBy +
                ", modifiedBy=" + modifiedBy +
                '}';
    }
}
