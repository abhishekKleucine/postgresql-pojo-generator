package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: qrtz_scheduler_state
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: qrtz_scheduler_state
 * - Primary Keys: sched_name, instance_name
 */
public class QrtzSchedulerState implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: sched_name
     * Type: varchar(120) NOT NULL
     * Primary Key
     */
    private String schedName;

    /**
     * Database column: instance_name
     * Type: varchar(200) NOT NULL
     * Primary Key
     */
    private String instanceName;

    /**
     * Database column: last_checkin_time
     * Type: int8 NOT NULL
     */
    private Long lastCheckinTime;

    /**
     * Database column: checkin_interval
     * Type: int8 NOT NULL
     */
    private Long checkinInterval;

    /**
     * Default constructor
     */
    public QrtzSchedulerState() {
    }

    /**
     * Gets sched_name
     * @return String
     */
    public String getSchedName() {
        return this.schedName;
    }

    /**
     * Sets sched_name
     * @param schedName the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setSchedName(String schedName) {
        if (schedName == null) {
            throw new IllegalArgumentException("sched_name cannot be null");
        }
        if (schedName != null && schedName.length() > 120) {
            throw new IllegalArgumentException("sched_name length cannot exceed 120 characters");
        }
        this.schedName = schedName;
    }

    /**
     * Gets instance_name
     * @return String
     */
    public String getInstanceName() {
        return this.instanceName;
    }

    /**
     * Sets instance_name
     * @param instanceName the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setInstanceName(String instanceName) {
        if (instanceName == null) {
            throw new IllegalArgumentException("instance_name cannot be null");
        }
        if (instanceName != null && instanceName.length() > 200) {
            throw new IllegalArgumentException("instance_name length cannot exceed 200 characters");
        }
        this.instanceName = instanceName;
    }

    /**
     * Gets last_checkin_time
     * @return Long
     */
    public Long getLastCheckinTime() {
        return this.lastCheckinTime;
    }

    /**
     * Sets last_checkin_time
     * @param lastCheckinTime the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setLastCheckinTime(Long lastCheckinTime) {
        if (lastCheckinTime == null) {
            throw new IllegalArgumentException("last_checkin_time cannot be null");
        }
        this.lastCheckinTime = lastCheckinTime;
    }

    /**
     * Gets checkin_interval
     * @return Long
     */
    public Long getCheckinInterval() {
        return this.checkinInterval;
    }

    /**
     * Sets checkin_interval
     * @param checkinInterval the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setCheckinInterval(Long checkinInterval) {
        if (checkinInterval == null) {
            throw new IllegalArgumentException("checkin_interval cannot be null");
        }
        this.checkinInterval = checkinInterval;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        QrtzSchedulerState other = (QrtzSchedulerState) obj;
        return Objects.equals(this.schedName, other.schedName) && Objects.equals(this.instanceName, other.instanceName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.schedName, this.instanceName);
    }

    @Override
    public String toString() {
        return "QrtzSchedulerState{" +
                "schedName=" + schedName +
                ", instanceName=" + instanceName +
                ", lastCheckinTime=" + lastCheckinTime +
                ", checkinInterval=" + checkinInterval +
                '}';
    }
}
