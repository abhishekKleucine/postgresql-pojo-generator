package com.example.pojogenerator.pojos;

import java.io.Serializable;
import java.util.Objects;

/**
 * POJO class for table: qrtz_paused_trigger_grps
 * Generated by PostgreSQL POJO Generator
 * 
 * Table Information:
 * - Table Name: qrtz_paused_trigger_grps
 * - Primary Keys: sched_name, trigger_group
 */
public class QrtzPausedTriggerGrp implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Database column: sched_name
     * Type: varchar(120) NOT NULL
     * Primary Key
     */
    private String schedName;

    /**
     * Database column: trigger_group
     * Type: varchar(200) NOT NULL
     * Primary Key
     */
    private String triggerGroup;

    /**
     * Default constructor
     */
    public QrtzPausedTriggerGrp() {
    }

    /**
     * Gets sched_name
     * @return String
     */
    public String getSchedName() {
        return this.schedName;
    }

    /**
     * Sets sched_name
     * @param schedName the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setSchedName(String schedName) {
        if (schedName == null) {
            throw new IllegalArgumentException("sched_name cannot be null");
        }
        if (schedName != null && schedName.length() > 120) {
            throw new IllegalArgumentException("sched_name length cannot exceed 120 characters");
        }
        this.schedName = schedName;
    }

    /**
     * Gets trigger_group
     * @return String
     */
    public String getTriggerGroup() {
        return this.triggerGroup;
    }

    /**
     * Sets trigger_group
     * @param triggerGroup the value to set
     * @throws IllegalArgumentException if constraint validation fails
     */
    public void setTriggerGroup(String triggerGroup) {
        if (triggerGroup == null) {
            throw new IllegalArgumentException("trigger_group cannot be null");
        }
        if (triggerGroup != null && triggerGroup.length() > 200) {
            throw new IllegalArgumentException("trigger_group length cannot exceed 200 characters");
        }
        this.triggerGroup = triggerGroup;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        QrtzPausedTriggerGrp other = (QrtzPausedTriggerGrp) obj;
        return Objects.equals(this.schedName, other.schedName) && Objects.equals(this.triggerGroup, other.triggerGroup);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.schedName, this.triggerGroup);
    }

    @Override
    public String toString() {
        return "QrtzPausedTriggerGrp{" +
                "schedName=" + schedName +
                ", triggerGroup=" + triggerGroup +
                '}';
    }
}
